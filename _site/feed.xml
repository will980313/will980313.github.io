<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-12-12T00:32:56+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">인공지능 공부방</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>이 주언</name><email>will980313@gmail.com</email></author><entry><title type="html">Introducing Hydejack 9</title><link href="http://localhost:4000/study/dl/2020-07-03-hydejack-9/" rel="alternate" type="text/html" title="Introducing Hydejack 9" /><published>2020-07-03T00:00:00+09:00</published><updated>2022-02-06T20:43:30+09:00</updated><id>http://localhost:4000/study/dl/hydejack-9</id><content type="html" xml:base="http://localhost:4000/study/dl/2020-07-03-hydejack-9/"><![CDATA[<p class="lead">Version 9 is the most complete version of Hydejack yet.</p>

<p><a href="#linking-in-style">Modernized</a> <a href="#whats-in-the-cards">design</a>, <a href="#ready-for-the-big-screen">big headlines</a>, big new features: <a href="#built-in-search">Built-In Search</a>, <a href="#sticky-table-of-contents">Sticky Table of Contents</a>, and <a href="#auto-hiding-navbar">Auto-Hiding Navbar</a>. That <a href="#and-much-more">and more</a> is Hydejack 9.</p>

<ul class="large-only" id="markdown-toc">
  <li><a href="#linking-in-style" id="markdown-toc-linking-in-style">Linking in Style</a></li>
  <li><a href="#ready-for-the-big-screen" id="markdown-toc-ready-for-the-big-screen">Ready for the Big Screen</a></li>
  <li><a href="#whats-in-the-cards" id="markdown-toc-whats-in-the-cards">What’s in the Cards?</a></li>
  <li><a href="#built-in-search" id="markdown-toc-built-in-search">Built-In Search</a></li>
  <li><a href="#auto-hiding-navbar" id="markdown-toc-auto-hiding-navbar">Auto-Hiding Navbar</a></li>
  <li><a href="#sticky-table-of-contents" id="markdown-toc-sticky-table-of-contents">Sticky Table of Contents</a></li>
  <li><a href="#and-much-more" id="markdown-toc-and-much-more">…and much more</a></li>
  <li><a href="#even-more-to-come" id="markdown-toc-even-more-to-come">Even More to Come</a></li>
  <li><a href="#get-it-now" id="markdown-toc-get-it-now">Get It Now</a></li>
</ul>

<h2 id="linking-in-style">Linking in Style</h2>

<p>Ever since the introduction of Dark Mode, link styles have been a bit of an issue. Specifically, finding an accent color that worked on both light and dark backgrounds was the problem. With Hydejack 9, the <a href="#linking-in-style">link style</a> has been revamped so that legibility is no longer tied to the choice of accent_color, giving you much more freedom in creating a unique design flavor for your site.</p>

<h2 id="ready-for-the-big-screen">Ready for the Big Screen</h2>

<p>The theme on which Hydejack is based was designed for a different era of the web. Hydejack has inherited many of its limitations, but over time I’ve made adjustments, such as centering the content column for better reading ergonomics.</p>

<p>With version 9, Hydejack takes full advantage of large displays. Whether it’s design indulgences such as oversized headlines, or quality of life improvements such as a floating table of contents, Hydejack now finds use for all that extra screen real estate<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<h2 id="whats-in-the-cards">What’s in the Cards?</h2>

<p>Hydejack 9 now lets you use content cards for both projects and posts. 
The cards have been redesigned with a new hover style and drop shadows and they retain their unique transition-to-next-page animations, which now also work on the <code class="language-plaintext highlighter-rouge">blog</code> layout. The new <code class="language-plaintext highlighter-rouge">grid</code> layout lets you do that.</p>

<p>Good images are key to making the most out of content cards. For that reason, a <a href="../../docs/basics.md#adding-images">chapter on images</a> has been added to the documentation.</p>

<h2 id="built-in-search">Built-In Search</h2>

<p>Hydejack now has Built-In Search. It even works offline. I’ve been prototyping many approaches and eventually settled on a fully client-side, off-the-main thread solution that perfectly fits the use case of personal sites and shows surprisingly good results<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>.</p>

<p>The new search UI is custom made for Hydejack and shows beautiful previews of your posts and pages, right on top of your regular content.</p>

<p>Together with the Auto-Hiding Navbar, your entire content library is now only a couple of keystrokes away.</p>

<h2 id="auto-hiding-navbar">Auto-Hiding Navbar</h2>

<p>A navbar that’s there when you need it, and disappears when you don’t. Simple as that.</p>

<h2 id="sticky-table-of-contents">Sticky Table of Contents</h2>

<p>Already a staple on so many sites on the web, this pattern is now also available in Hydejack. 
What’s unique about it is that it simply picks up the table of contents already created by kramdown’s <code class="language-plaintext highlighter-rouge">{:toc}</code> tag and transparently upgrades it to a fully dynamic version.</p>

<h2 id="and-much-more">…and much more</h2>

<p>Other noteworthy changes include:</p>
<ul>
  <li>Support for Jekyll 4</li>
  <li>Choice between MathJax and KaTeX for math rendering</li>
  <li>Use of <code class="language-plaintext highlighter-rouge">jekyll-include-cache</code> for drastically improved page building speeds</li>
  <li>New variables configuration file — adjust content width, sidebar width, font size, etc…</li>
  <li>…and the option to disable grouping projects by year.</li>
</ul>

<p>Read the the <a href="../../CHANGELOG.md" class="heading flip-title">CHANGELOG</a> for the full scope of features and improvements made in Hydejack 9.
Maybe just glance at it to confirm that it is indeed a pretty long list.</p>

<h2 id="even-more-to-come">Even More to Come</h2>

<p>New features for 9.1 are already lined up. Code block headers and code line highlights for even better technical blogging, as well as download buttons on the resume page for PDF, vCard, and Resume JSON are just around the corner.</p>

<h2 id="get-it-now">Get It Now</h2>
<p>The Free Version of Hydejack is now availabe on <a href="https://rubygems.org/gems/jekyll-theme-hydejack">RubyGems</a>
and for the first time also on <a href="https://github.com/hydecorp/hydejack/packages">GitHub Packages</a>. 
The source code is available on <a href="https://github.com/hydecorp/hydejack">GitHub</a> as always.</p>

<p>The PRO Version is scheduled to release on July 7th on Gumroad. Pre-Orders are open now:</p>

<div class="gumroad-product-embed" data-gumroad-product-id="nuOluY"><a href="https://gumroad.com/l/nuOluY">Loading…</a></div>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>If you are a fan of the old two-column layout, or don’t like modern design tropes such as mega headlines, Hydejack lets you revert these changes on a case-by-case basis via configuration options. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">

      <p>Search was mainly tested for English and German. Please let me know about issues in other languages. 
  While I’ve tried to find a multi-language solution, most showed drastically worse  results for the English base case.
  If you’re technically inclined, you can adopt the code located in <code class="language-plaintext highlighter-rouge">_includes/js/search-worker.js</code> to your needs. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="study" /><category term="dl" /><summary type="html"><![CDATA[Version 9 is the most complete version of Hydejack yet. Modernized design, big headlines, and big new features.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/jeremy-bishop@0,5x.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/jeremy-bishop@0,5x.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Example Content III</title><link href="http://localhost:4000/study/math/2018-06-01-content-iii/" rel="alternate" type="text/html" title="Example Content III" /><published>2018-06-01T00:00:00+09:00</published><updated>2022-02-06T20:43:30+09:00</updated><id>http://localhost:4000/study/math/content-iii</id><content type="html" xml:base="http://localhost:4000/study/math/2018-06-01-content-iii/"><![CDATA[<p>Hydejack offers a few additional features to markup your markdown.
Don’t worry, these are merely CSS classes added with kramdown’s <code class="language-plaintext highlighter-rouge">{:...}</code> syntax,
so that your content remains compatible with other Jekyll themes.</p>

<h2 id="large-tables">Large Tables</h2>

<table class="scroll-table">
  <thead>
    <tr>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
    </tr>
    <tr>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
    </tr>
    <tr>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
    </tr>
    <tr>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
</table>

<h2 id="code-blocks">Code blocks</h2>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Example can be run directly in your JavaScript console</span>

<span class="c1">// Create a function that takes two arguments and returns the sum of those</span>
<span class="c1">// arguments</span>
<span class="kd">var</span> <span class="nx">adder</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Function</span><span class="p">(</span><span class="dl">"</span><span class="s2">a</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">b</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">return a + b</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">// Call the function</span>
<span class="nx">adder</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
<span class="c1">// &gt; 8</span>
</code></pre></div></div>

<h2 id="math">Math</h2>
<p>Lorem ipsum \(f(x) = x^2\).</p>

\[\begin{aligned}
  \phi(x,y) &amp;= \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right) \\[2em]
            &amp;= \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j)            \\[2em]
            &amp;= (x_1, \ldots, x_n)
               \left(\begin{array}{ccc}
                 \phi(e_1, e_1)  &amp; \cdots &amp; \phi(e_1, e_n) \\
                 \vdots          &amp; \ddots &amp; \vdots         \\
                 \phi(e_n, e_1)  &amp; \cdots &amp; \phi(e_n, e_n)
               \end{array}\right)
               \left(\begin{array}{c}
                 y_1    \\
                 \vdots \\
                 y_n
               \end{array}\right)
\end{aligned}\]

<h2 id="message-boxes">Message boxes</h2>
<p class="message"><strong>NOTE</strong>: You can add a message box.</p>

<h2 id="large-text">Large text</h2>
<p class="lead">You can add large text.</p>

<h2 id="large-images">Large images</h2>
<p><img src="https://via.placeholder.com/800x100" alt="Full-width image" class="lead" width="800" height="100" /></p>

<h2 id="captions-to-images">Captions to images</h2>
<p class="figure"><img src="https://via.placeholder.com/800x100" alt="Full-width image" class="lead" width="800" height="100" />
A caption to an image.</p>

<h2 id="large-quotes">Large quotes</h2>
<blockquote class="lead">
  <p>You can make a quote “pop out”.</p>
</blockquote>

<h2 id="faded-text">Faded text</h2>
<p class="faded">I’m faded, faded, faded.</p>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="study" /><category term="math" /><summary type="html"><![CDATA[A page showing Hydejack-specific markdown content.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/example-content-iii.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/example-content-iii.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Example Content II</title><link href="http://localhost:4000/study/ml/2017-11-23-content-ii/" rel="alternate" type="text/html" title="Example Content II" /><published>2017-11-23T00:00:00+09:00</published><updated>2022-02-06T20:43:30+09:00</updated><id>http://localhost:4000/study/ml/content-ii</id><content type="html" xml:base="http://localhost:4000/study/ml/2017-11-23-content-ii/"><![CDATA[<p>There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.</p>

<p>There should be whitespace between paragraphs.</p>

<p>Text can be <strong>bold</strong>, <em>italic</em>, or <del>strikethrough</del>.</p>

<p><a href="another-page">Link to another page</a>.</p>

<ul class="large-only" id="markdown-toc">
  <li><a href="#header-2" id="markdown-toc-header-2">Header 2</a>    <ul>
      <li><a href="#header-3" id="markdown-toc-header-3">Header 3</a>        <ul>
          <li><a href="#header-4" id="markdown-toc-header-4">Header 4</a>            <ul>
              <li><a href="#header-5" id="markdown-toc-header-5">Header 5</a>                <ul>
                  <li><a href="#header-6" id="markdown-toc-header-6">Header 6</a></li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#theres-a-horizontal-rule-below-this" id="markdown-toc-theres-a-horizontal-rule-below-this">There’s a horizontal rule below this.</a></li>
      <li><a href="#here-is-an-unordered-list" id="markdown-toc-here-is-an-unordered-list">Here is an unordered list:</a></li>
      <li><a href="#and-an-ordered-list" id="markdown-toc-and-an-ordered-list">And an ordered list:</a></li>
      <li><a href="#and-a-nested-list" id="markdown-toc-and-a-nested-list">And a nested list:</a></li>
      <li><a href="#small-image" id="markdown-toc-small-image">Small image</a></li>
      <li><a href="#large-image" id="markdown-toc-large-image">Large image</a></li>
      <li><a href="#definition-lists" id="markdown-toc-definition-lists">Definition lists</a></li>
    </ul>
  </li>
</ul>

<h2 id="header-2">Header 2</h2>

<p>This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.</p>

<h3 id="header-3">Header 3</h3>

<blockquote>
  <p>This is a blockquote following a header.</p>

  <p>When something is important enough, you do it even if the odds are not in your favor.</p>
</blockquote>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Javascript code with syntax highlighting.</span>
<span class="kd">var</span> <span class="nx">fun</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">lang</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">dateformat</span><span class="p">.</span><span class="nx">i18n</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./lang/</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">l</span><span class="p">)</span>
  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Ruby code with syntax highlighting</span>
<span class="no">GitHubPages</span><span class="o">::</span><span class="no">Dependencies</span><span class="p">.</span><span class="nf">gems</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">gem</span><span class="p">,</span> <span class="n">version</span><span class="o">|</span>
  <span class="n">s</span><span class="p">.</span><span class="nf">add_dependency</span><span class="p">(</span><span class="n">gem</span><span class="p">,</span> <span class="s2">"= </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<h4 id="header-4">Header 4</h4>

<ul>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
  <li>This is an unordered list following a header.</li>
</ul>

<h5 id="header-5">Header 5</h5>

<ol>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
  <li>This is an ordered list following a header.</li>
</ol>

<h6 id="header-6">Header 6</h6>

<table>
  <thead>
    <tr>
      <th style="text-align: left">head1</th>
      <th style="text-align: left">head two</th>
      <th style="text-align: left">three</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good swedish fish</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">out of stock</td>
      <td style="text-align: left">good and plenty</td>
      <td style="text-align: left">nice</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">oreos</code></td>
      <td style="text-align: left">hmm</td>
    </tr>
    <tr>
      <td style="text-align: left">ok</td>
      <td style="text-align: left">good <code class="language-plaintext highlighter-rouge">zoute</code> drop</td>
      <td style="text-align: left">yumm</td>
    </tr>
  </tbody>
</table>

<h3 id="theres-a-horizontal-rule-below-this">There’s a horizontal rule below this.</h3>

<hr />

<h3 id="here-is-an-unordered-list">Here is an unordered list:</h3>

<ul>
  <li>Item foo</li>
  <li>Item bar</li>
  <li>Item baz</li>
  <li>Item zip</li>
</ul>

<h3 id="and-an-ordered-list">And an ordered list:</h3>

<ol>
  <li>Item one</li>
  <li>Item two</li>
  <li>Item three</li>
  <li>Item four</li>
</ol>

<h3 id="and-a-nested-list">And a nested list:</h3>

<ul>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item
        <ul>
          <li>level 3 item</li>
          <li>level 3 item</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item
    <ul>
      <li>level 2 item</li>
      <li>level 2 item</li>
    </ul>
  </li>
  <li>level 1 item</li>
</ul>

<h3 id="small-image">Small image</h3>

<p><img src="https://assets-cdn.github.com/images/icons/emoji/octocat.png" alt="" /></p>

<h3 id="large-image">Large image</h3>

<p><img src="https://guides.github.com/activities/hello-world/branching.png" alt="" /></p>

<h3 id="definition-lists">Definition lists</h3>

<dl>
  <dt>Name</dt>
  <dd>Godzilla</dd>
  <dt>Born</dt>
  <dd>1952</dd>
  <dt>Birthplace</dt>
  <dd>Japan</dd>
  <dt>Color</dt>
  <dd>Green</dd>
</dl>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Or is it?
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The final element.
</code></pre></div></div>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="study" /><category term="ml" /><summary type="html"><![CDATA[A page showing how regular markdown content is styled in Hydejack.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/example-content-ii.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/blog/example-content-ii.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Config</title><link href="http://localhost:4000/project/2012-02-07-config/" rel="alternate" type="text/html" title="Config" /><published>2012-02-07T00:00:00+09:00</published><updated>2022-12-10T16:55:51+09:00</updated><id>http://localhost:4000/project/config</id><content type="html" xml:base="http://localhost:4000/project/2012-02-07-config/"><![CDATA[<p>Once Jekyll is running, you can start with basic configuration by adding various entries to <code class="language-plaintext highlighter-rouge">_config.yml</code>. 
Besides the documentation here, you can also read the <a href="https://github.com/hydecorp/hydejack-starter-kit/blob/v9/_config.yml">annotated config file</a>.</p>

<p class="note">When making changes to <code class="language-plaintext highlighter-rouge">_config.yml</code>, it is necessary to restart the Jekyll process for changes to take effect.</p>

<ol id="markdown-toc">
  <li><a href="#setting-url-and-baseurl" id="markdown-toc-setting-url-and-baseurl">Setting <code class="language-plaintext highlighter-rouge">url</code> and <code class="language-plaintext highlighter-rouge">baseurl</code></a>    <ol>
      <li><a href="#github-pages" id="markdown-toc-github-pages">GitHub Pages</a></li>
    </ol>
  </li>
  <li><a href="#changing-accent-colors-and-sidebar-images" id="markdown-toc-changing-accent-colors-and-sidebar-images">Changing accent colors and sidebar images</a>    <ol>
      <li><a href="#theme-color" id="markdown-toc-theme-color">Theme color</a></li>
    </ol>
  </li>
  <li><a href="#changing-fonts" id="markdown-toc-changing-fonts">Changing fonts</a>    <ol>
      <li><a href="#removing-google-fonts" id="markdown-toc-removing-google-fonts">Removing Google Fonts</a></li>
    </ol>
  </li>
  <li><a href="#choosing-a-blog-layout" id="markdown-toc-choosing-a-blog-layout">Choosing a blog layout</a>    <ol>
      <li><a href="#using-the-blog-layout-in-a-subdirectory" id="markdown-toc-using-the-blog-layout-in-a-subdirectory">Using the <code class="language-plaintext highlighter-rouge">blog</code> layout in a subdirectory</a></li>
    </ol>
  </li>
  <li><a href="#adding-an-author" id="markdown-toc-adding-an-author">Adding an author</a>    <ol>
      <li><a href="#adding-an-authors-picture" id="markdown-toc-adding-an-authors-picture">Adding an author’s picture</a></li>
      <li><a href="#adding-social-media-icons" id="markdown-toc-adding-social-media-icons">Adding social media icons</a></li>
      <li><a href="#adding-an-email-rss-icon-or-download-icon" id="markdown-toc-adding-an-email-rss-icon-or-download-icon">Adding an email, RSS icon or download icon</a></li>
    </ol>
  </li>
  <li><a href="#enabling-comments" id="markdown-toc-enabling-comments">Enabling comments</a></li>
  <li><a href="#enabling-google-analytics" id="markdown-toc-enabling-google-analytics">Enabling Google Analytics</a>    <ol>
      <li><a href="#using-a-custom-analytics-provider" id="markdown-toc-using-a-custom-analytics-provider">Using a custom analytics provider</a></li>
    </ol>
  </li>
  <li><a href="#changing-built-in-strings" id="markdown-toc-changing-built-in-strings">Changing built-in strings</a></li>
  <li><a href="#adding-legal-documents" id="markdown-toc-adding-legal-documents">Adding legal documents</a></li>
  <li><a href="#enabling-math-blocks" id="markdown-toc-enabling-math-blocks">Enabling math blocks</a></li>
  <li><a href="#adding-custom-favicons-and-app-icons" id="markdown-toc-adding-custom-favicons-and-app-icons">Adding custom Favicons and App Icons</a>    <ol>
      <li><a href="#changing-the-favicon" id="markdown-toc-changing-the-favicon">Changing the Favicon</a></li>
      <li><a href="#changing-the-app-icons" id="markdown-toc-changing-the-app-icons">Changing the App Icons</a></li>
    </ol>
  </li>
  <li><a href="#adding-a-cookies-banner" id="markdown-toc-adding-a-cookies-banner">Adding a cookies banner*</a></li>
  <li><a href="#enabling-newsletter-boxes" id="markdown-toc-enabling-newsletter-boxes">Enabling newsletter boxes*</a></li>
  <li><a href="#enabling-dark-mode" id="markdown-toc-enabling-dark-mode">Enabling Dark Mode*</a></li>
</ol>

<h2 id="setting-url-and-baseurl">Setting <code class="language-plaintext highlighter-rouge">url</code> and <code class="language-plaintext highlighter-rouge">baseurl</code></h2>
<p>The first order of business should be to set the correct <code class="language-plaintext highlighter-rouge">url</code> and <code class="language-plaintext highlighter-rouge">baseurl</code> values in <code class="language-plaintext highlighter-rouge">_config.yml</code>.</p>

<p>The <code class="language-plaintext highlighter-rouge">url</code> is the domain of your site, including the protocol (<code class="language-plaintext highlighter-rouge">http</code> or <code class="language-plaintext highlighter-rouge">https</code>). For this site, it is</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">url</span><span class="pi">:</span> <span class="s">https://qwtel.com</span>
</code></pre></div></div>

<p class="note">You don’t need to provide this property when hosting on GitHub Pages or Netlify.</p>

<p>If your entire Jekyll blog is hosted in a subdirectory of your page, provide the path in <code class="language-plaintext highlighter-rouge">baseurl</code> with a leading <code class="language-plaintext highlighter-rouge">/</code>, but no trailing <code class="language-plaintext highlighter-rouge">/</code>,
e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">baseurl</span><span class="pi">:</span> <span class="s">/hydejack</span>
</code></pre></div></div>

<p>Otherwise, provide the empty string <code class="language-plaintext highlighter-rouge">''</code></p>

<p class="note">You don’t need to provide this property when hosting on GitHub Pages or Netlify.</p>

<h3 id="github-pages">GitHub Pages</h3>
<p>When hosting on <a href="https://pages.github.com/">GitHub Pages</a> the <code class="language-plaintext highlighter-rouge">url</code> is <code class="language-plaintext highlighter-rouge">https://&lt;username&gt;.github.io</code>
(unless you are using a custom domain).</p>

<p>The <code class="language-plaintext highlighter-rouge">baseurl</code> depends on the kind of page you are hosting.</p>

<ul>
  <li>When hosting a <em>user or organization page</em>, use the empty string <code class="language-plaintext highlighter-rouge">''</code>.</li>
  <li>When hosting <em>project page</em>, use <code class="language-plaintext highlighter-rouge">/&lt;reponame&gt;</code>.</li>
</ul>

<p>For for information on the types of pages you can host on GitHub, see the
<a href="https://help.github.com/articles/user-organization-and-project-pages/">GitHub Help article</a>.</p>

<h2 id="changing-accent-colors-and-sidebar-images">Changing accent colors and sidebar images</h2>
<p>Hydejack allows you to choose the background image of the sidebar, as well as the accent color
(color of the links, selection and focus outline, etc…).</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">accent_image</span><span class="pi">:</span> <span class="s">/assets/img/sidebar-bg.jpg</span>
<span class="na">accent_color</span><span class="pi">:</span> <span class="s">rgb(79,177,186)</span>
</code></pre></div></div>

<p class="note">I recommend using a blurred image in order for the text to remain readable.
If you save a blurred image as JPG, it will also drastically reduce its file size.</p>

<p>The <code class="language-plaintext highlighter-rouge">accent_image</code> property also accepts the special value <code class="language-plaintext highlighter-rouge">none</code> which will remove the default image.</p>

<p>If your sidebar image contains bright colors, the white text can be difficult to read. In this case, consider setting
<code class="language-plaintext highlighter-rouge">invert_sidebar: true</code> in the front matter to invert the text colors in the sidebar. 
Use <a href="https://jekyllrb.com/docs/configuration/#front-matter-defaults">front matter defaults</a> to enable this on all pages (see below).</p>

<p>Note that these values can be overwritten on a per-page basis, i.e. you can create a unique look for each page.
You can also apply a certain look to all posts in a category via <a href="https://jekyllrb.com/docs/configuration/#front-matter-defaults">front matter defaults</a>, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">defaults</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">scope</span><span class="pi">:</span>
      <span class="na">path</span><span class="pi">:</span>         <span class="s">hydejack/</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">accent_image</span><span class="pi">:</span> <span class="s">/assets/img/hydejack-bg.jpg</span>
      <span class="na">accent_color</span><span class="pi">:</span> <span class="s">rgb(38,139,210)</span>
</code></pre></div></div>

<h3 id="theme-color">Theme color</h3>
<p>Hydejack also supports the <code class="language-plaintext highlighter-rouge">theme_color</code> property. When set, it will change the background color of the sidebar, as well as set the <code class="language-plaintext highlighter-rouge">theme_color</code> property in the <a href="https://web.dev/add-manifest/#theme-color">Web App Manifest</a>. In some browsers, such as Chrome on Android, this will change the color of the browser’s UI components.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">theme_color</span><span class="pi">:</span>  <span class="s">rgb(25,55,71)</span>
</code></pre></div></div>

<p>Just like <code class="language-plaintext highlighter-rouge">accent_*</code> properties, the theme color can be overridden on a per-page basis by setting it in the front matter.</p>

<h2 id="changing-fonts">Changing fonts</h2>
<p>Hydejack lets you configure the font of regular text and headlines, and it has built-in support for Google Fonts.
There are three keys in <code class="language-plaintext highlighter-rouge">_config.yml</code> associated with this: <code class="language-plaintext highlighter-rouge">font</code>, <code class="language-plaintext highlighter-rouge">font_heading</code> and <code class="language-plaintext highlighter-rouge">google_fonts</code>.
The defaults are:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">font</span><span class="pi">:</span>         <span class="s">Noto Sans, Helvetica, Arial, sans-serif</span>
<span class="na">font_heading</span><span class="pi">:</span> <span class="s">Roboto Slab, Helvetica, Arial, sans-serif</span>
<span class="na">google_fonts</span><span class="pi">:</span> <span class="s">Roboto+Slab:700|Noto+Sans:400,400i,700,700i</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">font</code> and <code class="language-plaintext highlighter-rouge">font_heading</code> must be valid CSS <code class="language-plaintext highlighter-rouge">font-family</code> values. When using Google Fonts make sure to provide at least one fallback.</p>

<p>The <code class="language-plaintext highlighter-rouge">google_fonts</code> key is the string necessary to fetch the fonts from Google.
You can get it from the download page at <a href="https://fonts.google.com">Google Fonts</a> after you’ve selected one or more fonts:</p>

<p><img src="../assets/img/docs/google-fonts.png" alt="Where to get the google_fonts string" width="600" height="398" loading="lazy" /></p>

<h3 id="removing-google-fonts">Removing Google Fonts</h3>
<p>If you prefer not to use Google Fonts and remove all associated code from the site,
set the <code class="language-plaintext highlighter-rouge">google_fonts</code> key to <code class="language-plaintext highlighter-rouge">false</code>.</p>

<p class="note">The <code class="language-plaintext highlighter-rouge">no_google_fonts</code> parameter has been removed in v9 and no longer has any effect.</p>

<h2 id="choosing-a-blog-layout">Choosing a blog layout</h2>
<p>Hydejack features three layouts for showing your blog posts.</p>

<ul>
  <li>The <a href="https://hydejack.com/posts/"><code class="language-plaintext highlighter-rouge">list</code> layout</a> only shows the title and groups the posts by year of publication.</li>
  <li>The <a href="https://hydejack.com/blog/hydejack/"><code class="language-plaintext highlighter-rouge">grid</code> layout</a>* is exclusive to the PRO Version and will show a content card (with <code class="language-plaintext highlighter-rouge">image</code>) for each post.</li>
  <li>The <a href="https://hydejack.com/blog/"><code class="language-plaintext highlighter-rouge">blog</code> layout</a> is a traditional paginated layout and shows the title and an excerpt of each post.</li>
</ul>

<p>In order to use the <code class="language-plaintext highlighter-rouge">list</code> or <code class="language-plaintext highlighter-rouge">grid</code> layout add the following front-matter to a new markdown file:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">list</span> <span class="c1"># or `grid`</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Home</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>If you want to use the <code class="language-plaintext highlighter-rouge">blog</code> layout, you need to add <code class="language-plaintext highlighter-rouge">jekyll-paginate</code> to your <code class="language-plaintext highlighter-rouge">Gemfile</code> and to the <code class="language-plaintext highlighter-rouge">plugins</code> list in your config file:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `Gemfile`</span>
<span class="n">gem</span> <span class="s2">"jekyll-paginate"</span>
</code></pre></div></div>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">plugins</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">jekyll-paginate</span>
</code></pre></div></div>

<p>You also need to add the <code class="language-plaintext highlighter-rouge">paginate</code> and <code class="language-plaintext highlighter-rouge">paginate_path</code> keys to your config file, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">paginate</span><span class="pi">:</span>      <span class="m">10</span>
<span class="na">paginate_path</span><span class="pi">:</span> <span class="s1">'</span><span class="s">/:num/'</span>
</code></pre></div></div>

<p>The <code class="language-plaintext highlighter-rouge">blog</code> layout needs to be applied to a file with the <code class="language-plaintext highlighter-rouge">.html</code> file extension
and the <code class="language-plaintext highlighter-rouge">paginate_path</code> needs to match the path to the <code class="language-plaintext highlighter-rouge">index.html</code> file.
To match the <code class="language-plaintext highlighter-rouge">paginate_path</code> above, put a <code class="language-plaintext highlighter-rouge">index.html</code> with the following front matter in the root directory:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `index.html`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">blog</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Blog</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>For more information see <a href="https://jekyllrb.com/docs/pagination/">Pagination</a>.</p>

<h3 id="using-the-blog-layout-in-a-subdirectory">Using the <code class="language-plaintext highlighter-rouge">blog</code> layout in a subdirectory</h3>
<p>If you want to use the blog layout at a URL like <code class="language-plaintext highlighter-rouge">/my-blog/</code>, create the following folder structure:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── my-blog
│   └── index.html
└── _config.yml
</code></pre></div></div>

<p>You can use the same <code class="language-plaintext highlighter-rouge">index.html</code> as before and place it in the subdirectory.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `my-blog/index.html`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">blog</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Blog</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>In your config file, make sure the <code class="language-plaintext highlighter-rouge">paginate_path</code> matches the name of the subdirectory:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">paginate</span><span class="pi">:</span>      <span class="m">10</span>
<span class="na">paginate_path</span><span class="pi">:</span> <span class="s">/my-blog/:num/</span> <span class="c1">#!!</span>
</code></pre></div></div>

<p>To add an entry in the sidebar to your blog directory, see <a href="./basics.md#adding-an-entry-to-the-sidebar">Adding an entry to the sidebar</a>.</p>

<h2 id="adding-an-author">Adding an author</h2>
<p>At a bare minimum, you should add an <code class="language-plaintext highlighter-rouge">author</code> key with a <code class="language-plaintext highlighter-rouge">name</code> and <code class="language-plaintext highlighter-rouge">email</code> sub-key
(used by the <a href="https://github.com/jekyll/jekyll-feed">feed plugin</a>) to to your config file:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span>  <span class="s">Florian Klampfer</span>
  <span class="na">email</span><span class="pi">:</span> <span class="s">mail@qwtel.com</span>
</code></pre></div></div>

<p>If you would like the author to be displayed in the about section below a post or project*, add an <code class="language-plaintext highlighter-rouge">about</code> key and provide markdown content. I recommend using the YAML pipe <code class="language-plaintext highlighter-rouge">|</code> syntax, so you can include multiple paragraphs:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span>  <span class="s">Florian Klampfer</span>
  <span class="na">email</span><span class="pi">:</span> <span class="s">mail@qwtel.com</span>
  <span class="na">about</span><span class="pi">:</span> <span class="pi">|</span>
    <span class="s">Hi, I'm Florian or @qwtel...</span>

    <span class="s">This is another paragraph.</span>
</code></pre></div></div>

<h3 id="adding-an-authors-picture">Adding an author’s picture</h3>
<p>If you’d like for the author’s picture to appear in addition the about text (see above), you can either use the <a href="https://github.com/benbalter/jekyll-avatar"><code class="language-plaintext highlighter-rouge">jekyll-avatar</code></a> plugin or provide URLs to images manually.</p>

<p>To use the plugin, add it to your <code class="language-plaintext highlighter-rouge">Gemfile</code> and the list of <code class="language-plaintext highlighter-rouge">plugins</code> in your config file:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `Gemfile`</span>
<span class="n">gem</span> <span class="s2">"jekyll-avatar"</span>
</code></pre></div></div>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">plugins</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">jekyll-avatar</span>
</code></pre></div></div>

<p>Run <code class="language-plaintext highlighter-rouge">bundle install</code> for the changes to take effect.</p>

<p>Make sure you have provided a GitHub username in your config file (<code class="language-plaintext highlighter-rouge">github_username</code>),
or to the author key (<code class="language-plaintext highlighter-rouge">author.social.github</code>, <code class="language-plaintext highlighter-rouge">author.github.username</code>, or <code class="language-plaintext highlighter-rouge">author.github</code>).
See <a href="#adding-social-media-icons">Adding social media icons</a> for more.</p>

<p>To set an image manually, you have to provide an URL to the author’s <code class="language-plaintext highlighter-rouge">picture</code> key:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">picture</span><span class="pi">:</span>  <span class="s">/assets/img/me.jpg</span>
</code></pre></div></div>

<p>If you’d like to provide multiple versions for screens with different pixel densities,
you can provide <code class="language-plaintext highlighter-rouge">path</code> and <code class="language-plaintext highlighter-rouge">srcset</code> keys instead:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">picture</span><span class="pi">:</span>
    <span class="na">path</span><span class="pi">:</span>   <span class="s">/assets/img/me.jpg</span>
    <span class="na">srcset</span><span class="pi">:</span>
      <span class="na">1x</span><span class="pi">:</span>   <span class="s">/assets/img/me.jpg</span>
      <span class="na">2x</span><span class="pi">:</span>   <span class="s">/assets/img/me@2x.jpg</span>
</code></pre></div></div>

<p>The keys of the <code class="language-plaintext highlighter-rouge">srcset</code> hash will be used as image descriptors. For more information on <code class="language-plaintext highlighter-rouge">srcset</code>, see the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset">documentation at MDN</a>, or <a href="https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-srcset/">this article from CSS-Tricks</a>.</p>

<h3 id="adding-social-media-icons">Adding social media icons</h3>
<p>Hydejack supports a variety of social media icons out of the box. These are defined on a per-author basis, so make sure you’ve followed the steps in <a href="#adding-an-author">Adding an author</a>.</p>

<p class="note">If you are using the gem-based version of Hydejack, download <a href="https://github.com/hydecorp/hydejack-starter-kit/blob/v9/_data/social.yml"><code class="language-plaintext highlighter-rouge">social.yml</code></a> and put it into <code class="language-plaintext highlighter-rouge">_data</code> in the root directory. This is necessary because gem-based themes do not support including <code class="language-plaintext highlighter-rouge">_data</code>.</p>

<p>You can add a link to a social network by adding an entry to the <code class="language-plaintext highlighter-rouge">social</code> key in to an author.
It consists of the name of the social network as key and your username within that network as value, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">social</span><span class="pi">:</span>
    <span class="na">twitter</span><span class="pi">:</span> <span class="s">qwtel</span>
    <span class="na">github</span><span class="pi">:</span>  <span class="s">qwtel</span>
</code></pre></div></div>

<p>Check out <a href="https://github.com/hydecorp/hydejack-starter-kit/blob/v9/_data/authors.yml"><code class="language-plaintext highlighter-rouge">authors.yml</code></a> to see which networks are available.
You can also follow the steps <a href="advanced.md">here</a> to add your own social media icons.</p>

<p>You can change the order in which the icons appear by moving lines up or down, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">social</span><span class="pi">:</span>
    <span class="na">github</span><span class="pi">:</span>  <span class="s">qwtel</span> <span class="c1"># now github appears first</span>
    <span class="na">twitter</span><span class="pi">:</span> <span class="s">qwtel</span>
</code></pre></div></div>

<p>To get an overview of which networks are available and how a typical username in that network looks like,
see the included <a href="https://github.com/hydecorp/hydejack-starter-kit/blob/v9/_data/authors.yml"><code class="language-plaintext highlighter-rouge">authors.yml</code></a>.</p>

<p>Should providing a username not produce a correct link for some reason, you can provide a complete URL instead, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">social</span><span class="pi">:</span>
    <span class="na">youtube</span><span class="pi">:</span> <span class="s">https://www.youtube.com/channel/UCu0PYX_kVANdmgIZ4bw6_kA</span>
</code></pre></div></div>

<p class="note">You can add any platform, even if it’s not defined in <a href="https://github.com/hydecorp/hydejack-starter-kit/blob/v9/_data/social.yml"><code class="language-plaintext highlighter-rouge">social.yml</code></a>, by providing a complete URL. However, a fallback icon <span class="icon-link"></span> will be used when no icon is available. Supplying your own icons is an <a href="advanced.md">advanced topic</a>.</p>

<h3 id="adding-an-email-rss-icon-or-download-icon">Adding an email, RSS icon or download icon</h3>
<p>If you’d like to add an email <span class="icon-mail"></span>, RSS <span class="icon-rss2"></span>, or download <span class="icon-box-add"></span> icon to the list, add the <code class="language-plaintext highlighter-rouge">email</code>, <code class="language-plaintext highlighter-rouge">rss</code>, or <code class="language-plaintext highlighter-rouge">download</code> key, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">author</span><span class="pi">:</span>
  <span class="na">social</span><span class="pi">:</span>
    <span class="na">email</span><span class="pi">:</span>    <span class="s">mail@qwtel.com</span>
    <span class="na">rss</span><span class="pi">:</span>      <span class="s">http://localhost:4000/feed.xml</span> <span class="c1"># make sure you provide an absolute URL</span>
    <span class="na">download</span><span class="pi">:</span> <span class="s">https://github.com/hydecorp/hydejack/archive/v9.1.6.zip</span>
</code></pre></div></div>

<h2 id="enabling-comments">Enabling comments</h2>
<p>Hydejack supports comments via <a href="https://disqus.com/">Disqus</a>. Before you can add comments to a page you need to register and add your site to Disqus’ admin console. Once you have obtained your “Disqus shortname”, you include it in your config file:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">disqus</span><span class="pi">:</span> <span class="s">&lt;disqus shortname&gt;</span>
</code></pre></div></div>

<p>Now comments can be enabled by adding <code class="language-plaintext highlighter-rouge">comments: true</code> to the front matter.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span>   <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span>    <span class="s">Hello World</span>
<span class="na">comments</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>You can enable comments for entire classes of pages by using <a href="https://jekyllrb.com/docs/configuration/#front-matter-defaults">front matter defaults</a>.
E.g. to enable comments on all posts, add to your config file:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">defaults</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">scope</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">posts</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">comments</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<h2 id="enabling-google-analytics">Enabling Google Analytics</h2>
<p>Enabling Google Analytics is as simple as setting the <code class="language-plaintext highlighter-rouge">google_analytics</code> key.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">google_analytics</span><span class="pi">:</span> <span class="s">UA-XXXXXXXX-X</span>
</code></pre></div></div>

<p>To remove Google Analytics and all associated code from the site, set the <code class="language-plaintext highlighter-rouge">google_analytics</code> key to <code class="language-plaintext highlighter-rouge">false</code>.</p>

<h3 id="using-a-custom-analytics-provider">Using a custom analytics provider</h3>
<p>If you want to use a different analytics provider such as <a href="https://matomo.org/">Matomo</a>, you can add its code snippet to <code class="language-plaintext highlighter-rouge">_includes/my-body.html</code> (create if it doesn’t exist).
The <a href="https://github.com/hydecorp/hydejack-starter-kit/blob/v9/_includes/my-body.html">default file</a> contains an example.</p>

<h2 id="changing-built-in-strings">Changing built-in strings</h2>
<p>You can change the wording of built-in strings like “Related Posts” or “Read more” in <code class="language-plaintext highlighter-rouge">_data/strings.yml</code>.</p>

<p>If you are using the gem-based version the file doesn’t exist, but you can get the default file <a href="https://github.com/hydecorp/hydejack-starter-kit/blob/v9/_data/strings.yml">here</a>.</p>

<p>You will frequently find markers like <code class="language-plaintext highlighter-rouge">&lt;!--post_title--&gt;</code>.
You can place them freely within your string and they will be replaced with the content they refer to.</p>

<p>You may also use this feature to translate the theme into different languages.
In this case you should also set the <code class="language-plaintext highlighter-rouge">lang</code> key to your config file, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">lang</span><span class="pi">:</span> <span class="s">cc-ll</span>
</code></pre></div></div>

<p>where <code class="language-plaintext highlighter-rouge">cc</code> is the 2-letter country code and <code class="language-plaintext highlighter-rouge">ll</code> specifies a 2-letter location code, e.g.: <code class="language-plaintext highlighter-rouge">de-at</code>.</p>

<p>You may also change the strings used for formatting dates and times (look out for the <code class="language-plaintext highlighter-rouge">date_formats</code> key), but be aware that the values you provide need to be valid Ruby <a href="http://ruby-doc.org/core-2.4.1/Time.html#method-i-strftime">format directives</a>.</p>

<h2 id="adding-legal-documents">Adding legal documents</h2>
<p>If you have pages for contact data, privacy policy, cookie policy, etc. you can add links to them in the footer by listing them under the <code class="language-plaintext highlighter-rouge">legal</code> key in your config file as follows:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">legal</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Impress</span>
    <span class="na">url</span><span class="pi">:</span>  <span class="s">/impress/</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Cookies Policy</span>
    <span class="na">url</span><span class="pi">:</span>  <span class="s">/cookies-policy/</span>
</code></pre></div></div>

<p>When using Hydejack’s offline feature, the pages listed here will be downloaded and cached when loading the page for the first time.</p>

<h2 id="enabling-math-blocks">Enabling math blocks</h2>

<p>Hydejack supports <a href="https://kramdown.gettalong.org/syntax.html#math-blocks">math blocks</a> with either <a href="https://khan.github.io/KaTeX/">KaTeX</a> or <a href="https://www.mathjax.org/">MathJax</a>.</p>

<p>The <em>MathJax implementation</em> comes with a client-side runtime and works on GitHub Pages. 
It is the more heavy-weight of the two and doesn’t work without JavaScript enabled. 
Due to the size of the complete MathJax package, it only works partially with offline support enabled.</p>

<p>The <em>KaTeX implementation</em> pre-renders the KaTeX output during site building.
It’s more lightweight because it does not ship a client-side runtime and therefore works without JavaScript.
In my opinion, it is the more elegant solution, but it requires a JavaScript runtime on the machine that builds the site,
i.e. it does not work on GitHub Pages.</p>

<p>You can switch between the two implementations by changing the <code class="language-plaintext highlighter-rouge">kramdown.math_engine</code> key to either <code class="language-plaintext highlighter-rouge">katex</code> or <code class="language-plaintext highlighter-rouge">mathjax</code> in your config file.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">kramdown</span><span class="pi">:</span>
  <span class="na">math_engine</span><span class="pi">:</span>         <span class="s">katex</span>
  <span class="na">math_engine_opts</span><span class="pi">:</span>    <span class="pi">{}</span>
</code></pre></div></div>

<p>The KaTeX implementation also requires the <code class="language-plaintext highlighter-rouge">kramdown-math-katex</code> gem in your <code class="language-plaintext highlighter-rouge">Gemfile</code>. 
If you intend to use MathJax instead, this step is not required.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `Gemfile`</span>
<span class="n">gem</span> <span class="s2">"kramdown-math-katex"</span>
</code></pre></div></div>

<p>There are a couple of things to know about this gem:</p>
<ul>
  <li>It is not supported on GitHub Pages. 
You have to build the site on your machine before uploading to GitHub,
or use a more permissive cloud building tool such as Netlify.</li>
  <li>You need some kind of JavaScript runtime on your machine.
Usually installing <a href="https://nodejs.org/en/download/">NodeJS</a> will suffice. 
Alternatively, adding <code class="language-plaintext highlighter-rouge">gem "duktape"</code> will also do.
For more, see <a href="https://github.com/kramdown/math-katex#documentation">https://github.com/kramdown/math-katex#documentation</a></li>
</ul>

<p>Before you add math content, remember to run <code class="language-plaintext highlighter-rouge">bundle install</code> and restart Jekyll.</p>

<h2 id="adding-custom-favicons-and-app-icons">Adding custom Favicons and App Icons</h2>
<h3 id="changing-the-favicon">Changing the Favicon</h3>
<p>By default, Hydejack will use the Favicon from <code class="language-plaintext highlighter-rouge">/assets/icons/favicon.ico</code> and Apple Touch Icon from <code class="language-plaintext highlighter-rouge">/assets/icons/icon-192x192.png</code>.
You can either override these files, or override the path in the config file via <code class="language-plaintext highlighter-rouge">favicon</code> and <code class="language-plaintext highlighter-rouge">app_touch_icon</code> keys:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: "_config.yml"</span>
<span class="na">favicon</span><span class="pi">:</span> <span class="s">/favicon.ico</span>
<span class="na">apple_touch_icon</span><span class="pi">:</span> <span class="s">/assets/img/logo.png</span>
</code></pre></div></div>

<h3 id="changing-the-app-icons">Changing the App Icons</h3>
<p>By default, Hydejack includes its own favicon, as well as app icons in 8 different resolutions.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Name</th>
      <th style="text-align: right">Resolution</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-512x512.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">512x512</code></td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-384x384.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">384x384</code></td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-192x192.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">192x192</code></td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-152x152.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">152x152</code></td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-144x144.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">144x144</code></td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-128x128.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">128x128</code></td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-96x96.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">96x96</code></td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="language-plaintext highlighter-rouge">icon-72x72.png</code></td>
      <td style="text-align: right"><code class="language-plaintext highlighter-rouge">72x72</code></td>
    </tr>
  </tbody>
</table>

<p>To change the default icons you have to replce all of them. To make this manageable, I recommend using the following tools:</p>

<p>First, use the <a href="https://maskable.app/editor">Maskable.app Editor</a> to confine your logo/picture to the “minimum safe area”. More on maskable app icons, see <a href="https://web.dev/maskable-icon">this article on web.dev</a>. 
Make sure the base image is at least 512x512 pixels in size.</p>

<p>Then use the <a href="https://app-manifest.firebaseapp.com/">Web App Manifest Generator</a> to automatically resize the icons. 
Upload the icon downloaded from Maskable.app and then click “Generate .zip”. 
In the zip, ignore the <code class="language-plaintext highlighter-rouge">manifest.json</code> and look for the <code class="language-plaintext highlighter-rouge">icons</code> folder. Copy it into the <code class="language-plaintext highlighter-rouge">assets</code> folder of your site.</p>

<p>To change the favicon, place your own <code class="language-plaintext highlighter-rouge">favicon.ico</code> (32x32, PNG) into <code class="language-plaintext highlighter-rouge">assets/icons</code>.</p>

<h2 id="adding-a-cookies-banner">Adding a cookies banner*</h2>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">hydejack</span><span class="pi">:</span>
  <span class="na">cookies_banner</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p>Enabling this setting will show a notice at the top of the page to new visitors.
You can change the wording of the notice in <code class="language-plaintext highlighter-rouge">_data/strings.yml</code>
with the <code class="language-plaintext highlighter-rouge">cookies_banner.text</code> and <code class="language-plaintext highlighter-rouge">cookies_banner.okay</code> keys:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_data/strings.yml`</span>
<span class="na">cookies_banner</span><span class="pi">:</span>
  <span class="na">text</span><span class="pi">:</span> <span class="s">This site uses cookies. [Markdown allowed](/cookies-policy/)!</span>
  <span class="na">okay</span><span class="pi">:</span> <span class="s">Okay</span>
</code></pre></div></div>

<h2 id="enabling-newsletter-boxes">Enabling newsletter boxes*</h2>
<p>To enable showing newsletter subscription boxes below each post and project,
provide your <a href="https://tinyletter.com/">Tinyletter</a> username to the <code class="language-plaintext highlighter-rouge">tinyletter</code> key in the config file.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">tinyletter</span><span class="pi">:</span>  <span class="s">&lt;tinyletter username&gt;</span>
</code></pre></div></div>

<p>To edit the content of the newsletter box, open <code class="language-plaintext highlighter-rouge">_data/strings.yml</code>, and change the entries under the <code class="language-plaintext highlighter-rouge">tinyletter</code> key.</p>

<p>If want to use a different mailing provider you can build your own form, and insert it into <code class="language-plaintext highlighter-rouge">_includes/my-newsletter.html</code>. The file includes an example form for MailChimp, where you need to fill in <code class="language-plaintext highlighter-rouge">site.mailchimp.action</code> and <code class="language-plaintext highlighter-rouge">site.mailchimp.hidden_input</code> (you can get these from MailChimp).</p>

<p>To build a completely new from, you can use <a href="https://getbootstrap.com/docs/4.0/components/forms/">the same CSS classes as Bootstrap</a>. Note that only form, grid and utility classes are available. Check out <a href="../forms-by-example.md" class="heading flip-title">Forms by Example</a> for more examples.</p>

<h2 id="enabling-dark-mode">Enabling Dark Mode*</h2>
<p>Buyers of the PRO version have access to a dark-themed version of Hydejack.</p>

<p>Dark mode can be enabled in <code class="language-plaintext highlighter-rouge">config.yml</code> under the <code class="language-plaintext highlighter-rouge">hydejack</code> key and has three settings and two adjustments:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">hydejack</span><span class="pi">:</span>
  <span class="na">dark_mode</span><span class="pi">:</span>
    <span class="na">dynamic</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">sunrise</span><span class="pi">:</span> <span class="m">6</span>
    <span class="na">sunset</span><span class="pi">:</span>  <span class="m">18</span>
    <span class="na">icon</span><span class="pi">:</span>    <span class="no">true</span>
    <span class="na">always</span><span class="pi">:</span>  <span class="no">false</span>
</code></pre></div></div>

<p>Setting <code class="language-plaintext highlighter-rouge">dynamic</code>, will enable dark mode based on the client’s local time (unlike location-based sunset calculations, this approach does not require a permission form the user). You can adjust <code class="language-plaintext highlighter-rouge">sunrise</code> and <code class="language-plaintext highlighter-rouge">sunset</code> to change when to show the light/dark theme.</p>

<p>Setting <code class="language-plaintext highlighter-rouge">icon</code> will show a switch to alternate between the light and dark mode at the top of the page.</p>

<p>Finally, setting <code class="language-plaintext highlighter-rouge">always</code> will cause dark mode to become the default theme at all times (combine with <code class="language-plaintext highlighter-rouge">dynamic: false</code>).</p>

<p class="read-more">Continue with <a href="basics.md" class="heading flip-title">Basics</a></p>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="project" /><summary type="html"><![CDATA[This chapter covers the many configuration options of Hydejack, allowing you to tailor it to your needs.]]></summary></entry><entry><title type="html">Advanced</title><link href="http://localhost:4000/project/2012-02-07-advanced/" rel="alternate" type="text/html" title="Advanced" /><published>2012-02-07T00:00:00+09:00</published><updated>2022-12-10T16:55:15+09:00</updated><id>http://localhost:4000/project/advanced</id><content type="html" xml:base="http://localhost:4000/project/2012-02-07-advanced/"><![CDATA[<p>This chapter covers advanced topics, such as offline support and custom JS builds. Codings skills are recommended.</p>

<ol id="markdown-toc">
  <li><a href="#enabling-offline-support" id="markdown-toc-enabling-offline-support">Enabling offline support</a>    <ol>
      <li><a href="#how-offline-storage-works" id="markdown-toc-how-offline-storage-works">How offline storage works</a></li>
    </ol>
  </li>
  <li><a href="#adding-a-custom-social-media-icon" id="markdown-toc-adding-a-custom-social-media-icon">Adding a custom social media icon</a>    <ol>
      <li><a href="#creating-the-icon-font" id="markdown-toc-creating-the-icon-font">Creating the icon font</a></li>
      <li><a href="#adding-the-platforms-metadata" id="markdown-toc-adding-the-platforms-metadata">Adding the platform’s metadata</a></li>
    </ol>
  </li>
  <li><a href="#how-css-is-organized-in-hydejack" id="markdown-toc-how-css-is-organized-in-hydejack">How CSS is organized in Hydejack</a></li>
</ol>

<h2 id="enabling-offline-support">Enabling offline support</h2>
<p>Hydejack v8 introduces experimental “cache as you go” offline support. This is implemented via the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker API</a>, a new browser standard that is now supported in the latest versions of all major browsers. However, it is a very powerful feature and should be used with a lot of care.</p>

<p>Enabling this feature requires that your content meets the following criteria:</p>

<ul>
  <li>Content doesn’t change between deploys (e.g. manually adding things to <code class="language-plaintext highlighter-rouge">_site</code> etc.)</li>
  <li>All assets in <code class="language-plaintext highlighter-rouge">assets</code> are immutable, i.e. they never change (when changing a file in assets, it needs to have a new name and links need to point to the new file).</li>
  <li>The site is mostly self-contained, i.e. assets are served from the same domain (offline support will not download assets form external sites by default)</li>
  <li>The site is served via HTTPS (this is a Service Worker requirement)</li>
</ul>

<p>To enable this feature, create a <code class="language-plaintext highlighter-rouge">sw.js</code> file in the root of your project and add the following content:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">---</span>
<span class="o">---</span>
<span class="nx">importScripts</span><span class="p">(</span><span class="dl">"</span><span class="s2">{{ '/assets/js/sw.js' | relative_url }}?t={{ site.time | date_to_xmlschema }}</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<p>This will load the main service worker script from Hydejack’s assets. The <code class="language-plaintext highlighter-rouge">site.time</code> part is necessary to make the service worker “byte different” every time you create a new build of your site, which triggers an update.</p>

<p>In your <code class="language-plaintext highlighter-rouge">config.yml</code> under the <code class="language-plaintext highlighter-rouge">hydejack</code> key, add the following:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">offline</span><span class="pi">:</span>
  <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
  <span class="na">cache_version</span><span class="pi">:</span> <span class="m">1</span>
</code></pre></div></div>

<p>The current implementation does not cache resources from external domains. There is now way of knowing if external sites conform to the conditions mentioned above, hence caching can be problematic and result in unexpected behavior.</p>

<p>For example, Google Analytics uses GET requests to send page views, each of which would be cached by the service worker without this policy. Frequently updating images, such as badges would never change.</p>

<p><img src="https://badge.fury.io/rb/jekyll-theme-hydejack.svg" alt="Gem Version" /></p>

<p>However, if you include resources that are hosted on another domain and don’t change, you can add the <code class="language-plaintext highlighter-rouge">sw-cache</code> query parameter to the URL, e.g.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://upload.wikimedia.org/wikipedia/commons/b/b1/57_Chevy_210.jpg?sw-cache
</code></pre></div></div>

<p>This will cause them to be cached like resources from the assets folder.</p>

<p>If you want to serve a file from the <code class="language-plaintext highlighter-rouge">assets</code> folder but NOT cache it for offline use, add the <code class="language-plaintext highlighter-rouge">no-cache</code> query parameter instead:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/assets/lfs/download.bin?no-cache
</code></pre></div></div>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/b/b1/57_Chevy_210.jpg?sw-cache" alt="57 Chevy" /></p>

<h3 id="how-offline-storage-works">How offline storage works</h3>

<p>Hydejack’s custom service worker implementation stores files for offline use on three different levels:</p>

<dl>
  <dt>Shell</dt>
  <dd>The shell files are the core Hydejack files (CSS, JS) that only change between version updates.
If you made changes to any of these after enabling offline support, you must force an update by bumping the <code class="language-plaintext highlighter-rouge">cache_version</code> number in the config file.</dd>
  <dt>Assets</dt>
  <dd><em>These are presumed to be immutable.</em> In other words, every file is cached indefinitely. E.g.: If you want to update an image after enabling offline support, add the image under a different name and change the link in the content. Alternatively, you can bump the <code class="language-plaintext highlighter-rouge">cache_version</code>, but this will remove all other cached files from the asset cache.</dd>
  <dt>Content</dt>
  <dd>The content cache exploits the fact that your content can’t change between builds, so that it can be stored for offline use until you upload a new build. For now, the entire content cache is discarded every time you publish new content (future versions could cache them based on last modified dates).</dd>
</dl>

<p>Other things to note are that the implementation will always cache the pages listed under <code class="language-plaintext highlighter-rouge">legal</code>, as well as the <code class="language-plaintext highlighter-rouge">404.html</code> page, which will be shown when the user is offline.</p>

<h2 id="adding-a-custom-social-media-icon">Adding a custom social media icon</h2>
<p>Hydejack includes a number of social media icons by default (in fact, everything that is provided by <a href="https://icomoon.io/">IcoMoon</a>), but since the landscape is always changing, it is likely that a platform that is important to you will be missing at some point.</p>

<p class="note">You can add any platform by simply providing a complete URL. However, a fallback icon <span class="icon-link"></span> will be used.</p>

<h3 id="creating-the-icon-font">Creating the icon font</h3>
<p>In order to add a custom social media icon you have to use the <a href="https://icomoon.io/app/">IcoMoon App</a> (free) to create a custom icon webfont. However, it is important that the generated font include all icons already in use by Hydejack. For this purpose, find the <code class="language-plaintext highlighter-rouge">selection.json</code> in <a href="https://github.com/hydecorp/hydejack/blob/v6/assets/icomoon/selection.json"><code class="language-plaintext highlighter-rouge">assets/icomoon/selection.json</code></a> and upload it to the app via “Import Icons”.
Then, use the app to add your icon(s).
Consult the <a href="https://icomoon.io/#docs">IcoMoon docs</a> for additional help.</p>

<p>Once you’ve created and downloaded the icon font form IconMoon, replace the <code class="language-plaintext highlighter-rouge">icomoon</code> folder in <code class="language-plaintext highlighter-rouge">assets</code> in its entirety. Keep in mind that future updates of Hydejack will override this folder.</p>

<h3 id="adding-the-platforms-metadata">Adding the platform’s metadata</h3>
<p>For the second step it is necessary to add the network’s metadata to <code class="language-plaintext highlighter-rouge">_data/social.yml</code>.
An entry looks like:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">deviantart</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">DeviantArt</span>
  <span class="na">icon</span><span class="pi">:</span> <span class="s">icon-deviantart</span>
  <span class="na">prepend</span><span class="pi">:</span> <span class="s2">"</span><span class="s">https://"</span>
  <span class="na">append</span><span class="pi">:</span> <span class="s2">"</span><span class="s">.deviantart.com"</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">name</code></dt>
  <dd>The name of the network. Used for the title attribute and screen readers.</dd>
  <dt><code class="language-plaintext highlighter-rouge">icon</code></dt>
  <dd>The icon CSS class. Can be chosen during the IcoMoon creation process.</dd>
  <dt><code class="language-plaintext highlighter-rouge">prepend</code></dt>
  <dd>Optional. A string that is prepended to the username to form the link to the profile. If the final URL should be <code class="language-plaintext highlighter-rouge">https://&lt;username&gt;.deviantart.com</code>, this would be <code class="language-plaintext highlighter-rouge">https://</code></dd>
  <dt><code class="language-plaintext highlighter-rouge">append</code></dt>
  <dd>Optional. A string that is appended to the username to form the link to the profile. If the final URL should be <code class="language-plaintext highlighter-rouge">https://&lt;username&gt;.deviantart.com</code>, this would be <code class="language-plaintext highlighter-rouge">.deviantart.com</code>.</dd>
</dl>

<h2 id="how-css-is-organized-in-hydejack">How CSS is organized in Hydejack</h2>
<p>Hydejack takes a quite unique approach to CSS, which is motivated by the ability to
inline essential CSS rules in a <code class="language-plaintext highlighter-rouge">style</code> tag in the <code class="language-plaintext highlighter-rouge">&lt;head/&gt;</code> of a page (to increase the loading speed),
while serving the rest in a separate file.</p>

<p>The styles are written in SCSS and are located in the <code class="language-plaintext highlighter-rouge">_sass</code> folder, which looks like</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── hydejack
│   ├── __inline__
│   ├── __link__
│   ├── _base.pre.scss
│   ├── ...
│   └── _social.pre.scss
├── pooleparty
│   ├── __inline__
│   ├── __link__
│   ├── _base.pre.scss
│   ├── ...
│   └── _type.pre.scss
├── mixins.scss
├── my-inline.scss
├── my-style.scss
├── syntax.scss
└── variables.scss
</code></pre></div></div>

<p>The style rules are organized alongside components (or rather, topics) like “sidebar” and “footer”.
Further, there are two separate frameworks, “pooleparty” and “hydejack”,
which grew out of the original <a href="http://getpoole.com/">Poole</a> and <a href="http://hyde.getpoole.com/">Hyde</a> projects.
Poole/party contains more general style rules, while Hyde/jack contains those that more are specific to the theme.
However, this separation has blurred over time.</p>

<p>Inside those folders, you will notice the <code class="language-plaintext highlighter-rouge">__inline__</code> and <code class="language-plaintext highlighter-rouge">__link__</code> folders.
The unfriendly names are intentional, because their contents are generated by a script and shouldn’t be modified directly.
The source files are located in the same folder and end with <code class="language-plaintext highlighter-rouge">.pre.scss</code>.
They are fully valid SCSS files, but contain comments that mark which lines should be inlined and which should be fetched asynchronously.</p>

<p>The rules are as follows:</p>
<ul>
  <li>Every line between <code class="language-plaintext highlighter-rouge">// &lt;&lt;&lt; inline </code> and <code class="language-plaintext highlighter-rouge">// &gt;&gt;&gt;</code> will be inlined</li>
  <li>Every line between <code class="language-plaintext highlighter-rouge">// &lt;&lt;&lt; link </code> and <code class="language-plaintext highlighter-rouge">// &gt;&gt;&gt;</code> will be linked</li>
  <li>Every line that isn’t contained in a block and ends with <code class="language-plaintext highlighter-rouge">// inline</code> will be inlined</li>
  <li>Every line that isn’t contained in a block and ends with <code class="language-plaintext highlighter-rouge">// link</code> will be linked</li>
  <li>Every line for which none of the above applies will be included in both.</li>
</ul>

<p>The actual splitting happen with the <code class="language-plaintext highlighter-rouge">.scripts/build-css.sh</code> script (requires node.js 8+).
You can run the script once by using</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>npm run build:css
</code></pre></div></div>

<p>or rebuild the CSS on every file change</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>npm run watch:css
</code></pre></div></div>

<p>Note that <code class="language-plaintext highlighter-rouge">my-inline.scss</code> and <code class="language-plaintext highlighter-rouge">my-style.scss</code> are not affected by this.
Also, since all files are valid SCSS, the splitting part is entirely optional.
If you would like to build just one regular CSS file, add</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hydejack</span><span class="pi">:</span>
  <span class="na">no_inline_css</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p>to your config file.</p>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="project" /><summary type="html"><![CDATA[This chapter covers advanced topics, such as offline support and custom JS builds. Codings skills are recommended.]]></summary></entry><entry><title type="html">Example Content</title><link href="http://localhost:4000/study/paper/2012-02-07-content/" rel="alternate" type="text/html" title="Example Content" /><published>2012-02-07T00:00:00+09:00</published><updated>2022-02-06T20:43:30+09:00</updated><id>http://localhost:4000/study/paper/content</id><content type="html" xml:base="http://localhost:4000/study/paper/2012-02-07-content/"><![CDATA[<p>Cum sociis natoque penatibus et magnis <a href="#">dis parturient montes</a>, nascetur ridiculus mus. <em>Aenean eu leo quam.</em> Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.</p>

<blockquote>
  <p>Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
</blockquote>

<p>Etiam porta <strong>sem malesuada magna</strong> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>

<h2 id="inline-html-elements">Inline <abbr title="HyperText Markup Language">HTML</abbr> elements</h2>

<p><abbr title="HyperText Markup Language">HTML</abbr> defines a long list of available inline tags, a complete list of which can be found on the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element">Mozilla Developer Network</a>.</p>

<ul>
  <li><strong>To bold text</strong>, use <code class="language-plaintext highlighter-rouge">**To bold text**</code>.</li>
  <li><em>To italicize text</em>, use <code class="language-plaintext highlighter-rouge">*To italicize text*</code>.</li>
  <li>Abbreviations, like <abbr title="HyperText Markup Language">HTML</abbr> should be defined like this <code class="language-plaintext highlighter-rouge">*[HTML]: HyperText Markup Language</code>.</li>
  <li>Citations, like <cite>— Mark otto</cite>, should use <code class="language-plaintext highlighter-rouge">&lt;cite&gt;</code>.</li>
  <li><del>Deleted</del> text should use <code class="language-plaintext highlighter-rouge">~~deleted~~</code> and <ins>inserted</ins> text should use <code class="language-plaintext highlighter-rouge">&lt;ins&gt;</code>.</li>
  <li>Superscript <sup>text</sup> uses <code class="language-plaintext highlighter-rouge">&lt;sup&gt;</code> and subscript <sub>text</sub> uses <code class="language-plaintext highlighter-rouge">&lt;sub&gt;</code>.</li>
</ul>

<p>Most of these elements are styled by browsers with few modifications on our part.</p>

<h2 id="heading-2">Heading 2</h2>
<p>Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>

<h3 id="heading-3">Heading 3</h3>
<p>Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor.</p>

<h4 id="heading-4">Heading 4</h4>
<p>Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor.</p>

<h5 id="heading-5">Heading 5</h5>
<p>Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor.</p>

<h6 id="heading-6">Heading 6</h6>
<p>Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor.</p>

<h2 id="code">Code</h2>

<p>Cum sociis natoque penatibus et magnis dis <code class="language-plaintext highlighter-rouge">code element</code> montes, nascetur ridiculus mus.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Example can be run directly in your JavaScript console</span>

<span class="c1">// Create a function that takes two arguments and returns the sum of those</span>
<span class="c1">// arguments</span>
<span class="kd">var</span> <span class="nx">adder</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Function</span><span class="p">(</span><span class="dl">"</span><span class="s2">a</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">b</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">return a + b</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">// Call the function</span>
<span class="nx">adder</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
<span class="c1">// &gt; 8</span>
</code></pre></div></div>

<h2 id="lists">Lists</h2>

<p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>

<ul>
  <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>
  <li>Donec id elit non mi porta gravida at eget metus.</li>
  <li>Nulla vitae elit libero, a pharetra augue.</li>
</ul>

<p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>

<ol>
  <li>Vestibulum id ligula porta felis euismod semper.</li>
  <li>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</li>
  <li>Maecenas sed diam eget risus varius blandit sit amet non magna.</li>
</ol>

<p>Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.</p>

<dl>
  <dt>HyperText Markup Language (<abbr title="HyperText Markup Language">HTML</abbr>)</dt>
  <dd>The language used to describe and define the content of a Web page</dd>
  <dt>Cascading Style Sheets (<abbr title="Cascading Style Sheets">CSS</abbr>)</dt>
  <dd>Used to describe the appearance of Web content</dd>
  <dt>JavaScript (<abbr title="JavaScript">JS</abbr>)</dt>
  <dd>The programming language used to build advanced Web sites and applications</dd>
</dl>

<p>Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.</p>

<h2 id="images">Images</h2>

<p>Quisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.</p>

<p><img src="https://via.placeholder.com/800x400" alt="800x400" title="Large example image" /></p>

<p><img src="https://via.placeholder.com/400x200" alt="400x200" title="Medium example image" /></p>

<p><img src="https://via.placeholder.com/200x200" alt="200x200" title="Small example image" /></p>

<h2 id="tables">Tables</h2>

<p>Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Name</th>
      <th style="text-align: left">Upvotes</th>
      <th style="text-align: left">Downvotes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Alice</td>
      <td style="text-align: left">10</td>
      <td style="text-align: left">11</td>
    </tr>
    <tr>
      <td style="text-align: left">Bob</td>
      <td style="text-align: left">4</td>
      <td style="text-align: left">3</td>
    </tr>
    <tr>
      <td style="text-align: left">Charlie</td>
      <td style="text-align: left">7</td>
      <td style="text-align: left">9</td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <td style="text-align: left">Totals</td>
      <td style="text-align: left">21</td>
      <td style="text-align: left">23</td>
    </tr>
  </tfoot>
</table>

<p>Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.</p>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="study" /><category term="paper" /><summary type="html"><![CDATA[Howdy! This is an example blog post that shows several types of HTML content supported in this theme.]]></summary></entry><entry><title type="html">Build</title><link href="http://localhost:4000/project/2012-02-07-build/" rel="alternate" type="text/html" title="Build" /><published>2012-02-07T00:00:00+09:00</published><updated>2022-12-10T16:55:04+09:00</updated><id>http://localhost:4000/project/build</id><content type="html" xml:base="http://localhost:4000/project/2012-02-07-build/"><![CDATA[<p>This chapters shows how to prepare your Hydejack site for a production build and deployment on 3rd party hosting providers.</p>

<ol id="markdown-toc">
  <li><a href="#building-locally" id="markdown-toc-building-locally">Building locally</a></li>
  <li><a href="#building-locally-with-latent-semantic-analysis" id="markdown-toc-building-locally-with-latent-semantic-analysis">Building locally with latent semantic analysis</a></li>
  <li><a href="#github-pages" id="markdown-toc-github-pages">GitHub Pages</a></li>
</ol>

<h2 id="building-locally">Building locally</h2>
<p>When building Hydejack it is important to set the environment variable <code class="language-plaintext highlighter-rouge">JEKYLL_ENV</code> to <code class="language-plaintext highlighter-rouge">production</code>.
Otherwise the output will not be minified. Building itself happens via Jekyll’s <code class="language-plaintext highlighter-rouge">build</code> command.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ JEKYLL_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>jekyll build
</code></pre></div></div>

<p>This will generate the finished static files in <code class="language-plaintext highlighter-rouge">_site</code>,
which can be deployed using the methods outlined in the <a href="https://jekyllrb.com/docs/deployment-methods/">Jekyll Documentation</a>.</p>

<h2 id="building-locally-with-latent-semantic-analysis">Building locally with latent semantic analysis</h2>
<p>By default, related posts are simply the most recent posts.
Hydejack modifies this a bit, by showing the most recent posts of the same category or tag.
However, the results are still pretty “unrelated”.
To provide better results, Jekyll supports <a href="https://en.wikipedia.org/wiki/Latent_semantic_analysis">latent semantic analysis</a> via <a href="http://www.classifier-reborn.com/"><code class="language-plaintext highlighter-rouge">classifier-reborn</code></a>’s
<a href="http://www.classifier-reborn.com/lsi">Latent Semantic Indexer</a></p>

<p>To use the <abbr title="Latent Semantic Indexer">LSI</abbr>, you first have to disable Hydejack’s default behavior,
by setting <code class="language-plaintext highlighter-rouge">use_lsi: true</code> under the <code class="language-plaintext highlighter-rouge">hydejack</code> key in your config file.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">hydejack</span><span class="pi">:</span>
  <span class="na">use_lsi</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p>Then, you have to run <code class="language-plaintext highlighter-rouge">jekyll build</code> with the <code class="language-plaintext highlighter-rouge">--lsi</code> flag:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ JEKYLL_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>jekyll build <span class="nt">--lsi</span>
</code></pre></div></div>

<p>Note that this may take a long time.
Once it is finished, the generated static files will be located in the <code class="language-plaintext highlighter-rouge">_site</code> directory,
which can be deployed using the methods outlined in the <a href="https://jekyllrb.com/docs/deployment-methods/">Jekyll Documentation</a>.</p>

<h2 id="github-pages">GitHub Pages</h2>
<p>If you’re using the Starter Kit for GitHub pages, all you have to do is push your repository:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git add <span class="nb">.</span>
<span class="nv">$ </span>git commit <span class="s2">"Update"</span>
<span class="nv">$ </span>git push origin master
</code></pre></div></div>

<!-- ## GitHub Pages
To deploy to GitHub Pages, the steps are:

~~~bash
$ cd _site
$ git init # you only need to do this once
$ git remote add origin <github_remote_url> # you only need to do this once
$ git add .
$ git commit -m "Build"
$ git push origin master:<remote_branch>
$ cd ..
~~~

`github_remote_url`
: Find this on your repository's GitHub page.

`remote_branch`
: Either `master` for "user or organization pages", or `gh-pages` for "project pages"

More on [user, organization, and project pages](https://help.github.com/articles/user-organization-and-project-pages/). -->

<!-- Continue with [Advanced](advanced.md){:.heading.flip-title}
{:.read-more} -->]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="project" /><summary type="html"><![CDATA[This chapters shows how to prepare your Hydejack site for a production build and deployment on 3rd party hosting providers.]]></summary></entry><entry><title type="html">Basics</title><link href="http://localhost:4000/project/2012-02-07-basics/" rel="alternate" type="text/html" title="Basics" /><published>2012-02-07T00:00:00+09:00</published><updated>2022-12-10T16:55:42+09:00</updated><id>http://localhost:4000/project/basics</id><content type="html" xml:base="http://localhost:4000/project/2012-02-07-basics/"><![CDATA[<p>This chapter covers the basics of content creation with Hydejack.</p>

<ol id="markdown-toc">
  <li><a href="#adding-images" id="markdown-toc-adding-images">Adding images</a></li>
  <li><a href="#adding-an-entry-to-the-sidebar" id="markdown-toc-adding-an-entry-to-the-sidebar">Adding an entry to the sidebar</a>    <ol>
      <li><a href="#adding-a-link-to-an-external-page-to-the-sidebar" id="markdown-toc-adding-a-link-to-an-external-page-to-the-sidebar">Adding a link to an external page to the sidebar</a></li>
    </ol>
  </li>
  <li><a href="#adding-a-category-or-tag" id="markdown-toc-adding-a-category-or-tag">Adding a category or tag</a>    <ol>
      <li><a href="#recap-categories-and-tags-in-jekyll" id="markdown-toc-recap-categories-and-tags-in-jekyll">Recap: Categories and tags in Jekyll</a></li>
      <li><a href="#categories-and-tags-in-hydejack" id="markdown-toc-categories-and-tags-in-hydejack">Categories and tags in Hydejack</a></li>
      <li><a href="#creating-a-new-category-or-tag" id="markdown-toc-creating-a-new-category-or-tag">Creating a new category or tag</a></li>
    </ol>
  </li>
  <li><a href="#adding-an-about-page" id="markdown-toc-adding-an-about-page">Adding an about page</a></li>
  <li><a href="#adding-a-cover-page" id="markdown-toc-adding-a-cover-page">Adding a cover page</a></li>
  <li><a href="#adding-related-posts-to-a-post" id="markdown-toc-adding-related-posts-to-a-post">Adding related posts to a post</a></li>
  <li><a href="#customization" id="markdown-toc-customization">Customization</a>    <ol>
      <li><a href="#adding-custom-css" id="markdown-toc-adding-custom-css">Adding custom CSS</a></li>
      <li><a href="#adding-custom-html-to-the-head" id="markdown-toc-adding-custom-html-to-the-head">Adding custom HTML to the head</a></li>
      <li><a href="#adding-custom-html-to-the-body" id="markdown-toc-adding-custom-html-to-the-body">Adding custom HTML to the body</a></li>
    </ol>
  </li>
  <li><a href="#adding-a-welcome-page" id="markdown-toc-adding-a-welcome-page">Adding a welcome page*</a></li>
  <li><a href="#projects" id="markdown-toc-projects">Projects*</a>    <ol>
      <li><a href="#adding-a-projects-page" id="markdown-toc-adding-a-projects-page">Adding a projects page</a></li>
      <li><a href="#adding-a-project" id="markdown-toc-adding-a-project">Adding a project</a></li>
      <li><a href="#organizing-projects" id="markdown-toc-organizing-projects">Organizing Projects</a></li>
    </ol>
  </li>
  <li><a href="#adding-a-resume" id="markdown-toc-adding-a-resume">Adding a resume*</a>    <ol>
      <li><a href="#changing-the-layout" id="markdown-toc-changing-the-layout">Changing the layout</a></li>
      <li><a href="#skill-level-icons" id="markdown-toc-skill-level-icons">Skill level icons</a></li>
      <li><a href="#adding-a-specialized-resume-or-multiple-resumes" id="markdown-toc-adding-a-specialized-resume-or-multiple-resumes">Adding a specialized resume or multiple resumes</a></li>
      <li><a href="#downloads" id="markdown-toc-downloads">Downloads</a></li>
    </ol>
  </li>
</ol>

<h2 id="adding-images">Adding images</h2>
<p>Adding good images is key to a engaging blog experience. You can provide an <code class="language-plaintext highlighter-rouge">image</code> attribute in in the front matter of posts, pages, and projects* that will be used by Hydejack in a variety of ways, 
such as header image in the <code class="language-plaintext highlighter-rouge">blog</code> and <code class="language-plaintext highlighter-rouge">post</code> layout, social media previews, cards in the <code class="language-plaintext highlighter-rouge">gird</code> and <code class="language-plaintext highlighter-rouge">projects</code> layout*, thumbnails in the search dropdown*, etc.</p>

<p>The <code class="language-plaintext highlighter-rouge">image</code> attribute will accept an URL to an image, but it is recommended that you provide a <code class="language-plaintext highlighter-rouge">path</code> / <code class="language-plaintext highlighter-rouge">srcset</code> hash instead, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">image</span><span class="pi">:</span>
  <span class="na">path</span><span class="pi">:</span>    <span class="s">/assets/img/projects/hyde-v2.jpg</span>
  <span class="na">srcset</span><span class="pi">:</span>
    <span class="na">1920w</span><span class="pi">:</span> <span class="s">/assets/img/projects/hyde-v2.jpg</span>
    <span class="na">960w</span><span class="pi">:</span>  <span class="s">/assets/img/projects/hyde-v2@0,5x.jpg</span>
    <span class="na">480w</span><span class="pi">:</span>  <span class="s">/assets/img/projects/hyde-v2@0,25x.jpg</span>
</code></pre></div></div>

<p>Hydejack will show the image in various sizes depending on available screen width so that no specific size will fit all. 
Instead, I recommend using a <a href="https://en.wikipedia.org/wiki/Mipmap">mipmap</a>-like approach, providing the image in multiple sizes, each image half the width of the previous one.
Since Hydejack provides an appropriate <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes"><code class="language-plaintext highlighter-rouge">sizes</code> attribute</a>, the browser can chose the best image from the provided source set.</p>

<p>If you have <a href="https://imagemagick.org/index.php">ImageMagick</a> installed, you can use the following commands to create images at 50%, 25%, and 12.5% of the original image. 
Other image tools will provide similar capabilities.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>convert your-image.jpg -resize 50% -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB your-image@0,5x.jpg
convert your-image.jpg -resize 25% -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB your-image@0,25x.jpg
convert your-image.jpg -resize 12.5% -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB your-image@0,125x.jpg
</code></pre></div></div>

<p>Note that the keys in the <code class="language-plaintext highlighter-rouge">srcset</code> hash have to be valid “descriptors” (as defined <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset">here</a>). In practice this means the width in pixels followed by <code class="language-plaintext highlighter-rouge">w</code>.</p>

<p>The <code class="language-plaintext highlighter-rouge">path</code> key is a fallback image for browsers that don’t support the <code class="language-plaintext highlighter-rouge">srcset</code> attribute. It’s also used by <code class="language-plaintext highlighter-rouge">jekyll-seo-tag</code> for social media previews.</p>

<p>For more information on <code class="language-plaintext highlighter-rouge">srcset</code>, see the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset">documentation at MDN</a>, or <a href="https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-srcset/">this article from CSS-Tricks</a>.</p>

<h2 id="adding-an-entry-to-the-sidebar">Adding an entry to the sidebar</h2>
<p>To add links to the sidebar, populate the <code class="language-plaintext highlighter-rouge">menu</code> entry in <code class="language-plaintext highlighter-rouge">_config.yml</code> with a list of <code class="language-plaintext highlighter-rouge">title</code>-<code class="language-plaintext highlighter-rouge">url</code> pairs, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">menu</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Blog</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/blog/</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Projects</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/projects/</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Resume</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/resume/</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">About</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/about/</span>
</code></pre></div></div>

<h3 id="adding-a-link-to-an-external-page-to-the-sidebar">Adding a link to an external page to the sidebar</h3>
<p>To add links to external sites, simply provide a fully qualified URL, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">menu</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">@qwtel"</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">https://qwtel.com/</span>
</code></pre></div></div>

<h2 id="adding-a-category-or-tag">Adding a category or tag</h2>
<p>Hydejack allows you to use the <code class="language-plaintext highlighter-rouge">list</code> or <code class="language-plaintext highlighter-rouge">grid</code>* layout to show all posts of a particular category or tag.</p>

<p>Before you start, make sure your config files contains the <code class="language-plaintext highlighter-rouge">features_categories</code> and <code class="language-plaintext highlighter-rouge">featured_tags</code> collections:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">collections</span><span class="pi">:</span>
  <span class="na">featured_categories</span><span class="pi">:</span>
    <span class="na">permalink</span><span class="pi">:</span>         <span class="s">/:name/</span>
    <span class="na">output</span><span class="pi">:</span>            <span class="no">true</span>
  <span class="na">featured_tags</span><span class="pi">:</span>
    <span class="na">permalink</span><span class="pi">:</span>         <span class="s">/tag-:name/</span>
    <span class="na">output</span><span class="pi">:</span>            <span class="no">true</span>
</code></pre></div></div>

<h3 id="recap-categories-and-tags-in-jekyll">Recap: Categories and tags in Jekyll</h3>
<p>Posts in Jekyll can belong to one or more categories, as well as one or more tags. They are defined in a post’s front matter:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span>     <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span>      <span class="s">Welcome to Jekyll</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">jekyll</span><span class="pi">,</span> <span class="nv">update</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span>       <span class="pi">[</span><span class="nv">jekyll</span><span class="pi">,</span> <span class="nv">update</span><span class="pi">]</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Posts can also be assigned to a category based on their position within the folder structure, e.g.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── jekyll
│   └── update
│       └── _posts
│           └── 2017-04-07-welcome-to-jekyll.markdown
</code></pre></div></div>

<p>This will place “Welcome to Jekyll” in the categories <code class="language-plaintext highlighter-rouge">jekyll</code> and <code class="language-plaintext highlighter-rouge">update</code>.</p>

<p class="note">This is now the preferred way of assigning categories in Hydejack, as it makes URLs correspond more naturally to the underlying folder structure.</p>

<p>Whether you use this method or not, categories will always be part of a posts URL, while tags will not.</p>

<table class="scroll-table-small">
  <thead>
    <tr>
      <th>Type</th>
      <th>URL</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Categories</td>
      <td><code class="language-plaintext highlighter-rouge">/jekyll/update/2017-04-07-welcome-to-jekyll/</code></td>
    </tr>
    <tr>
      <td>Tags</td>
      <td><code class="language-plaintext highlighter-rouge">/2017-04-07-welcome-to-jekyll/</code></td>
    </tr>
  </tbody>
</table>

<p>As far as Jekyll is concerned, this is the only difference.</p>

<h3 id="categories-and-tags-in-hydejack">Categories and tags in Hydejack</h3>
<p>Categories and tags are displayed by Hydejack below the title, after the date. Categories are displayed with the preposition “in”, while tags are displayed with the preposition “on”, e.g.</p>

<table class="scroll-table-small">
  <thead>
    <tr>
      <th>Type</th>
      <th>Title</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Categories</td>
      <td>Welcome to Jekyll¬ 07 Apr 2017 <strong>in</strong> Jekyll / Update</td>
    </tr>
    <tr>
      <td>Tags</td>
      <td>Welcome to Jekyll¬ 07 Apr 2017 <strong>on</strong> Jekyll, Update</td>
    </tr>
    <tr>
      <td>Both</td>
      <td>Welcome to Jekyll¬ 07 Apr 2017 <strong>in</strong> Jekyll / Update <strong>on</strong> Jekyll, Update</td>
    </tr>
  </tbody>
</table>

<p>You can adjust these in <a href="https://github.com/hydecorp/hydejack-site/blob/master/_data/strings.yml"><code class="language-plaintext highlighter-rouge">_data/string.yml</code></a>.</p>

<h3 id="creating-a-new-category-or-tag">Creating a new category or tag</h3>
<p>By default, categories and tags are rendered as plain text. Further steps are necessary if you want them to link to a page that contains a list of all posts that belong to that category or tag.</p>

<p>For each featured category or tag, a file called <code class="language-plaintext highlighter-rouge">&lt;category-name&gt;.md</code> or <code class="language-plaintext highlighter-rouge">&lt;tag-name&gt;.md</code> has to be created inside the <code class="language-plaintext highlighter-rouge">_featured_tags</code> and <code class="language-plaintext highlighter-rouge">_featured_categories</code> folders, respectively. Each file in these folders is part of a <a href="https://jekyllrb.com/docs/collections/">Jekyll Collection</a>.</p>

<p>The meta data of a category or tag is set in the files front matter, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_featured_categories/hyde.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">list</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Hyde</span>
<span class="na">slug</span><span class="pi">:</span>   <span class="s">hyde</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">Hyde is a brazen two-column [Jekyll](http://jekyllrb.com) theme.</span>
  <span class="s">It's based on [Poole](http://getpoole.com), the Jekyll butler.</span>
<span class="s">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">layout</code></dt>
  <dd>Must either <code class="language-plaintext highlighter-rouge">list</code> or <code class="language-plaintext highlighter-rouge">grid</code>*</dd>
  <dt><code class="language-plaintext highlighter-rouge">title</code></dt>
  <dd>Used as title of the page, as well as name of the category or tag as part of the line below a blog post’s title. Can be different from the name of the tag or category, as long as <code class="language-plaintext highlighter-rouge">slug</code> is identical to the name.</dd>
  <dt><code class="language-plaintext highlighter-rouge">slug</code></dt>
  <dd>Must be identical to the key used in the blog’s front matter, i.e. if you use <code class="language-plaintext highlighter-rouge">categories: [jekyll]</code> the <code class="language-plaintext highlighter-rouge">slug</code> must be <code class="language-plaintext highlighter-rouge">jekyll</code>. By default, the slug is derived from the title, but here it is recommended that you set it explicitly.</dd>
  <dt><code class="language-plaintext highlighter-rouge">description</code></dt>
  <dd>A medium-length description, used on the tag or category’s detail page and shown in a message box below the title.</dd>
  <dt><code class="language-plaintext highlighter-rouge">menu</code></dt>
  <dd>Set to to <code class="language-plaintext highlighter-rouge">true</code> if you want the category or tag to appear in the sidebar. For more information, see <a href="#adding-an-entry-to-the-sidebar">Adding an entry to the sidebar</a>.</dd>
</dl>

<p>Once the file is created, the page can be found at <code class="language-plaintext highlighter-rouge">/category/&lt;categoryname&gt;/</code> or <code class="language-plaintext highlighter-rouge">/tag/&lt;tagname&gt;/</code>.</p>

<h2 id="adding-an-about-page">Adding an about page</h2>
<p>About pages are a frequent use case, so Hydejack has a special layout for it. It is a slight modification of the <code class="language-plaintext highlighter-rouge">page</code> layout that allows showing the author information by adding the <code class="language-plaintext highlighter-rouge">&lt;!--author--&gt;</code> marker somewhere on the page.</p>

<p>To create an about page, make sure <code class="language-plaintext highlighter-rouge">layout</code> is set to <code class="language-plaintext highlighter-rouge">about</code>.
For more on authors, see <a href="config.md#adding-an-author">Adding an author</a>.</p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">&lt;!-- file: `about.md` --&gt;
---
</span>layout: about
<span class="gh">title:  About
---
</span>
Some content

<span class="c">&lt;!--author--&gt;</span>
</code></pre></div></div>

<h2 id="adding-a-cover-page">Adding a cover page</h2>
<p>Hydejack 8 introduces cover pages, i.e. pages witht he sidebar opened, so that it spans the entire screen. This feature is intended for landing pages. To enable it on a page, simply add <code class="language-plaintext highlighter-rouge">cover: true</code> to the front matter.</p>

<p><img src="../assets/img/blog/hydejack-8@0,5x.png" alt="Cover page example" class="lead" width="960" height="540" loading="lazy" /></p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `index.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">welcome</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Welcome</span>
<span class="na">cover</span><span class="pi">:</span>  <span class="no">true</span> <span class="c1">#!! Add this</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="adding-related-posts-to-a-post">Adding related posts to a post</h2>
<p>You can choose which posts will appear in the “Related Posts” section below a post by adding the <code class="language-plaintext highlighter-rouge">related_posts</code> key to the front matter of a post</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `category/_posts/2020-02-01-some-post.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">related_posts</span><span class="pi">:</span>
  <span class="c1"># Specify via the path in the file system</span>
  <span class="pi">-</span> <span class="s">category/_posts/2020-01-01-other-post.md</span>
  <span class="c1"># Can also use the url of the post,</span>
  <span class="c1"># but this will break when changing the `permalink` setting!</span>
  <span class="pi">-</span> <span class="s">/blog/category/2020-01-02-other-other-post/</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="customization">Customization</h2>
<h3 id="adding-custom-css">Adding custom CSS</h3>
<p>The quickest and safest way to add custom CSS to Hydejack is via the <code class="language-plaintext highlighter-rouge">_sass/my-inline.scss</code> and <code class="language-plaintext highlighter-rouge">_sass/my-style.scss</code> files (create the folder/the files if they don’t exist).</p>

<p>To add CSS that gets inlined into the page, i.e. is loaded with the first request, put the CSS rules into <code class="language-plaintext highlighter-rouge">my-inline.scss</code>. This is intended for above-the-fold content. Otherwise put the CSS rules into <code class="language-plaintext highlighter-rouge">my-style.scss</code>.
Note that this distinction has no effect when <code class="language-plaintext highlighter-rouge">no_inline_css</code> is enabled.</p>

<h3 id="adding-custom-html-to-the-head">Adding custom HTML to the head</h3>
<p>To add custom HTML elements to the <code class="language-plaintext highlighter-rouge">&lt;head&gt;</code> of the document, open <code class="language-plaintext highlighter-rouge">_includes/my-head.html</code> (create the folder/the files if they don’t exist) and add your elements there.</p>

<h3 id="adding-custom-html-to-the-body">Adding custom HTML to the body</h3>
<p>To add custom HTML elements to the <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> of the document, open <code class="language-plaintext highlighter-rouge">_includes/my-body.html</code> (create the folder/the files if they don’t exist) and add your elements there.</p>

<dl>
  <dt>What’s the difference to <code class="language-plaintext highlighter-rouge">my-scripts.html</code>?</dt>
  <dd>This file was used in earlier versions of Hydejack to accomplish the same goal. However, there are still instances were you might want to prefer <code class="language-plaintext highlighter-rouge">my-scripts.html</code> over <code class="language-plaintext highlighter-rouge">my-body.html</code>, as it won’t load scrips on redirect pages and will be ignored by browsers &lt; IE10.</dd>
</dl>

<h2 id="adding-a-welcome-page">Adding a welcome page*</h2>
<p>If you bought the PRO version of Hydejack you have access to the <code class="language-plaintext highlighter-rouge">welcome</code> layout.
It is intended to showcase your projects and blog posts in a compact way.
Technically, it is a modified version of the <code class="language-plaintext highlighter-rouge">about</code> layout, so it allows showing the author information where the <code class="language-plaintext highlighter-rouge">&lt;!--author--&gt;</code> marker is put. <a href="https://hydejack.com/">Demo</a>.</p>

<p>You can create a welcome page by creating a new markdown file and setting the layout to <code class="language-plaintext highlighter-rouge">welcome</code> in the front matter.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `index.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">welcome</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Welcome</span>
<span class="na">cover</span><span class="pi">:</span>  <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Without further configuration, the welcome page will just look like a regular page. However, it can be enhanced through the use of markers:</p>
<ul>
  <li>To show the two most recent projects, add the <code class="language-plaintext highlighter-rouge">&lt;!--projects--&gt;</code> marker to the content</li>
  <li>To show the four most recent blog posts, add the <code class="language-plaintext highlighter-rouge">&lt;!--posts--&gt;</code> marker to the content</li>
  <li>(To show the five most recent blog posts in list form, add the <code class="language-plaintext highlighter-rouge">&lt;!--posts_list--&gt;</code> marker to the content)</li>
</ul>

<p>The welcome layout also supports selecting specific projects and posts, by adding to the front matter, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `index.md`</span>
<span class="nn">---</span>
<span class="na">selected_projects</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">_projects/hydejack-v6.md</span>
  <span class="pi">-</span> <span class="s">/projects/hyde-v2/</span>
<span class="na">projects_page</span><span class="pi">:</span> <span class="s">projects.md</span>
<span class="na">selected_posts</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">_posts/2017-05-03-javascripten.md</span>
  <span class="pi">-</span> <span class="s">/blog/2012-02-07-example-content/</span>
<span class="na">posts_page</span><span class="pi">:</span> <span class="s">/blog/</span>
<span class="na">featured</span><span class="pi">:</span> <span class="no">false</span>
<span class="nn">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">selected_projects</code></dt>
  <dd>A list of paths to projects that should be featured in the <code class="language-plaintext highlighter-rouge">&lt;!--projects--&gt;</code> marker.
Either provide paths relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">/</code>,
or URLs according to the schema defined in <code class="language-plaintext highlighter-rouge">permalink</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">projects_page</code></dt>
  <dd>The path to the main projects page
Either a path relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">./</code>,
or a URL according to the schema defined in <code class="language-plaintext highlighter-rouge">permalink</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">selected_posts</code></dt>
  <dd>A list of paths to blog posts that should be featured in the <code class="language-plaintext highlighter-rouge">&lt;!--posts--&gt;</code> or <code class="language-plaintext highlighter-rouge">&lt;!--posts_list--&gt;</code> marker.
Either provide paths relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">/</code>,
or URLs according to the schema defined in <code class="language-plaintext highlighter-rouge">permalink</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">posts_page</code></dt>
  <dd>The path to the main posts page.
Either a path relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">./</code>,
or a URL according to the schema defined in <code class="language-plaintext highlighter-rouge">permalink</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">featured</code></dt>
  <dd>Optional. When <code class="language-plaintext highlighter-rouge">true</code>, project thumbnails will span the full width instead of half.
This setting takes precedence over the <code class="language-plaintext highlighter-rouge">featured</code> value of individual projects,
i.e. it will apply to the entire page.</dd>
</dl>

<h2 id="projects">Projects*</h2>

<h3 id="adding-a-projects-page">Adding a projects page</h3>
<p>The projects page will show all projects of a particular collection.</p>

<p>First, you need to make sure that you have the <code class="language-plaintext highlighter-rouge">projects</code> collection defined in <code class="language-plaintext highlighter-rouge">_config.yml</code>:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">collections</span><span class="pi">:</span>
  <span class="na">projects</span><span class="pi">:</span>
    <span class="na">permalink</span><span class="pi">:</span> <span class="s">/projects/:path/</span>
    <span class="na">output</span><span class="pi">:</span>    <span class="no">true</span>
</code></pre></div></div>

<p>Next, add a <code class="language-plaintext highlighter-rouge">projects.md</code> to in the root (you can adjust the name/location to match the <code class="language-plaintext highlighter-rouge">permalink</code> of the
collection).
This file has the <code class="language-plaintext highlighter-rouge">projects</code> layout (mind the “s” at the end) and should have a <code class="language-plaintext highlighter-rouge">show_collection</code> key,
with the name of the collection as a value, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `projects.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span>          <span class="s">projects</span>
<span class="na">title</span><span class="pi">:</span>           <span class="s">Projects*</span>
<span class="na">show_collection</span><span class="pi">:</span> <span class="s">projects</span>
<span class="na">featured</span><span class="pi">:</span>        <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">layout</code></dt>
  <dd>Must be <code class="language-plaintext highlighter-rouge">projects</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">title</code></dt>
  <dd>The title of the page. Note that this name is reused as part of each individual project page
(for the link that directs back to the projects page).</dd>
  <dt><code class="language-plaintext highlighter-rouge">show_collection</code></dt>
  <dd>The name of the collection you want display on this page. Defaults to <code class="language-plaintext highlighter-rouge">projects</code>. See <a href="#organizing-projects">Organizing Projects</a> for detail on how to handle multiple project collections.</dd>
  <dt><code class="language-plaintext highlighter-rouge">featured</code></dt>
  <dd>Optional. When <code class="language-plaintext highlighter-rouge">true</code>, project thumbnails will span the full width, instead of only half.
This setting takes precedence over the <code class="language-plaintext highlighter-rouge">featured</code> value of individual projects,
i.e. it will apply to the entire page.</dd>
</dl>

<h3 id="adding-a-project">Adding a project</h3>
<p>Projects are organized using <a href="https://jekyllrb.com/docs/collections/">Jekyll Collections</a>.
Each project generates an entry on the projects layout (<a href="https://hydejack.com/projects/">Demo</a>) as well as its own detail page (<a href="https://hydejack.com/projects/default/">Demo</a>).</p>

<p>Each project is defined by a file in the <code class="language-plaintext highlighter-rouge">_projects</code> directory.
The project’s meta information is defined in the file’s front matter. You can also add markdown content.
A project’s front matter should look like:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_projects/hyde-v2.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span>      <span class="s">project</span>
<span class="na">title</span><span class="pi">:</span>       <span class="s">Hyde v2*</span>
<span class="na">date</span><span class="pi">:</span>        <span class="s">2 Jan </span><span class="m">2014</span>
<span class="na">image</span><span class="pi">:</span>
  <span class="na">path</span><span class="pi">:</span>       <span class="s">/assets/img/projects/hyde-v2@0,25x.jpg</span>
  <span class="na">srcset</span><span class="pi">:</span>
    <span class="na">1920w</span><span class="pi">:</span>   <span class="s">/assets/img/projects/hyde-v2.jpg</span>
    <span class="na">960w</span><span class="pi">:</span>    <span class="s">/assets/img/projects/hyde-v2@0,5x.jpg</span>
    <span class="na">480w</span><span class="pi">:</span>    <span class="s">/assets/img/projects/hyde-v2@0,25x.jpg</span>
<span class="na">caption</span><span class="pi">:</span>     <span class="s">Hyde is a brazen two-column Jekyll theme.</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">Hyde is a brazen two-column [Jekyll](http://jekyllrb.com) theme.</span>
  <span class="s">It's based on [Poole](http://getpoole.com), the Jekyll butler.</span>
<span class="na">links</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span>   <span class="s">Demo</span>
    <span class="na">url</span><span class="pi">:</span>     <span class="s">http://hyde.getpoole.com</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span>   <span class="s">Source</span>
    <span class="na">url</span><span class="pi">:</span>     <span class="s">https://github.com/poole/hyde</span>
<span class="na">featured</span><span class="pi">:</span>    <span class="no">false</span>
<span class="nn">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">layout</code></dt>
  <dd>Must be set to <code class="language-plaintext highlighter-rouge">project</code></dd>
  <dt><code class="language-plaintext highlighter-rouge">date</code></dt>
  <dd>Providing a year is the minimum requirement. Used to sort the projects.</dd>
  <dt><code class="language-plaintext highlighter-rouge">image</code></dt>
  <dd>A 16:9 image of the project. See <a href="#adding-images">Adding images</a> for details.</dd>
  <dt><code class="language-plaintext highlighter-rouge">caption</code></dt>
  <dd>A short description, shown as part of each “project card” in the <code class="language-plaintext highlighter-rouge">projects</code> layout.</dd>
  <dt><code class="language-plaintext highlighter-rouge">description</code></dt>
  <dd>A medium-length description, used on the project’s detail page as meta description and shown as message box below the image.</dd>
  <dt><code class="language-plaintext highlighter-rouge">links</code></dt>
  <dd>A list of <code class="language-plaintext highlighter-rouge">title</code>-<code class="language-plaintext highlighter-rouge">url</code> pairs that link to external resources related to this project.</dd>
  <dt><code class="language-plaintext highlighter-rouge">author</code></dt>
  <dd>Optional. The author shown below the project, similar to posts.</dd>
  <dt><code class="language-plaintext highlighter-rouge">featured</code></dt>
  <dd>Optional. When <code class="language-plaintext highlighter-rouge">true</code>, the project preview will span the full content width. You can use this for projects that should receive more attention. You can set/override this for an entire page, by setting <code class="language-plaintext highlighter-rouge">featured</code> in the front matter (applies to the <code class="language-plaintext highlighter-rouge">projects</code> and <code class="language-plaintext highlighter-rouge">welcome</code> layout).</dd>
</dl>

<h3 id="organizing-projects">Organizing Projects</h3>
<p>If you want to organize your projects using categories or tags, similar to the way you do with posts, the best way is to achieve this is via multiple collections. Categories and tags are reserved for posts, and adding them to collections has no effect.</p>

<p>The default config file comes with one projects collection predefined, but we can easily add additional collections like so:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">collections</span><span class="pi">:</span>
  <span class="c1"># The default projects collection</span>
  <span class="na">projects</span><span class="pi">:</span>
    <span class="na">permalink</span><span class="pi">:</span>         <span class="s">/projects/:path/</span>
    <span class="na">output</span><span class="pi">:</span>            <span class="no">true</span>

  <span class="c1"># Our new projects collection</span>
  <span class="na">other_projects</span><span class="pi">:</span>
    <span class="c1"># Make sure the permalink path is different!</span>
    <span class="na">permalink</span><span class="pi">:</span>         <span class="s">/other-projects/:path/</span>
    <span class="na">output</span><span class="pi">:</span>            <span class="no">true</span>
</code></pre></div></div>

<p>Create a new folder in the top level directory that follows the naming convention <code class="language-plaintext highlighter-rouge">_&lt;collection name&gt;</code>. In our case the name is <code class="language-plaintext highlighter-rouge">_other_projects</code>.
In it, create collection items as <a href="#adding-a-project">shown above</a>.</p>

<p>This is enough to render the project pages. To render them all on a single page, create a projects page as <a href="#adding-a-projects-page">described above</a> with the <code class="language-plaintext highlighter-rouge">show_collection</code> key set to our new collection, e.g.:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: "other-collection.md"</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">projects</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Other Projects*</span>
<span class="na">show_collection</span><span class="pi">:</span> <span class="s">other_projects</span> <span class="c1">#!!</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Note that the file name matches the <code class="language-plaintext highlighter-rouge">other-projects</code> path in the <code class="language-plaintext highlighter-rouge">permalink</code> we’ve defined above. This is to ensure that the directories match up.</p>

<h2 id="adding-a-resume">Adding a resume*</h2>
<p>Hydejack’s PRO version features a generalized resume layout.
<a href="https://hydejack.com/resume/">Demo</a>.</p>

<p>It generates the resume page from a valid <a href="https://jsonresume.org/">JSON Resume</a>, which is good news if you already have a JSON resume. Otherwise, there are various ways of obtaining one:</p>

<ul>
  <li>You can edit the <a href="https://github.com/hydecorp/hydejack-site/blob/master/_data/resume.yml">example <code class="language-plaintext highlighter-rouge">resume.yml</code></a> in <code class="language-plaintext highlighter-rouge">_data</code> directly. It contains example entries for each type of entry.</li>
  <li>You can use the visual <a href="http://registry.jsonresume.org/">JSON Resume Editor</a>.</li>
  <li>If you have a LinkedIn profile, you can try <a href="https://jmperezperez.com/linkedin-to-json-resume/">LinkedIn to Json Résumé</a>.</li>
</ul>

<p>Once you have a JSON Resume, place it into <code class="language-plaintext highlighter-rouge">_data</code>.</p>

<p>To render a resume page, create a new markdown file and set the layout to <code class="language-plaintext highlighter-rouge">resume</code> in the front matter:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `resume.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">resume</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Resume</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">A short description of the page for search engines (~150 characters long).</span>
<span class="na">hide_description</span><span class="pi">:</span> <span class="no">true</span> 
<span class="nn">---</span>
</code></pre></div></div>

<p class="note">You can download the final <code class="language-plaintext highlighter-rouge">resume.json</code> (minified) from the assets folder. When running locally, you can find it at <code class="language-plaintext highlighter-rouge">_site/assets/resume.json</code>.</p>

<h3 id="changing-the-layout">Changing the layout</h3>
<p>You can customize the layout of the resume by rearranging the entries in the <code class="language-plaintext highlighter-rouge">left_column</code> and <code class="language-plaintext highlighter-rouge">right_columns</code> keys in the front matter, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `resume.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">resume</span>
<span class="na">left_column</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">work</span>
  <span class="pi">-</span> <span class="s">volunteer</span>
  <span class="pi">-</span> <span class="s">education</span>
  <span class="pi">-</span> <span class="s">awards</span>
  <span class="pi">-</span> <span class="s">publications</span>
  <span class="pi">-</span> <span class="s">references</span>
<span class="na">right_column</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">languages</span>
  <span class="pi">-</span> <span class="s">skills</span>
  <span class="pi">-</span> <span class="s">interests</span>
<span class="nn">---</span>
</code></pre></div></div>

<h3 id="skill-level-icons">Skill level icons</h3>
<p>By default, the layout will replace certain keywords with star icons. The keywords are as follows:</p>

<table>
  <thead>
    <tr>
      <th>Icon</th>
      <th>Skills</th>
      <th>Languages</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><span class="icon-star-full"></span><span class="icon-star-full"></span><span class="icon-star-full"></span></td>
      <td>3/3, Master, Expert, Senior, Professional</td>
      <td>5/5, Native or bilingual proficiency, Native speaker</td>
    </tr>
    <tr>
      <td><span class="icon-star-full"></span><span class="icon-star-full"></span><span class="icon-star-half"></span></td>
      <td> </td>
      <td>4/5, Full professional proficiency</td>
    </tr>
    <tr>
      <td><span class="icon-star-full"></span><span class="icon-star-full"></span><span class="icon-star-empty"></span></td>
      <td>2/3, Intermediate, Advanced, Amateur</td>
      <td>3/5, Professional working proficiency</td>
    </tr>
    <tr>
      <td><span class="icon-star-full"></span><span class="icon-star-half"></span><span class="icon-star-empty"></span></td>
      <td> </td>
      <td>2/5, Limited working proficiency</td>
    </tr>
    <tr>
      <td><span class="icon-star-full"></span><span class="icon-star-empty"></span><span class="icon-star-empty"></span></td>
      <td>1/3, Beginner, Novice, Junior</td>
      <td>1/5, Elementary proficiency</td>
    </tr>
    <tr>
      <td><span class="icon-star-empty"></span><span class="icon-star-empty"></span><span class="icon-star-empty"></span></td>
      <td>0/3</td>
      <td>0/5, No proficiency</td>
    </tr>
  </tbody>
</table>

<p>If a keyword is not recognized, the provided text will be spelled out  instead. To disable icons and always spell out the text,  set <code class="language-plaintext highlighter-rouge">no_skill_icons</code> and/or <code class="language-plaintext highlighter-rouge">no_langauge_icons</code> to <code class="language-plaintext highlighter-rouge">true</code>.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `resume.md`</span>
<span class="na">no_language_icons</span><span class="pi">:</span> <span class="no">true</span>
<span class="na">no_skill_icons</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<h3 id="adding-a-specialized-resume-or-multiple-resumes">Adding a specialized resume or multiple resumes</h3>
<p>You can add a specialized resume or multiple resumes by adding the resume YAML to the front matter under the <code class="language-plaintext highlighter-rouge">resume</code> key.
E.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `resume.md`</span>
<span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">resume</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Resume</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">A short description of the page for search engines (~150 characters long).</span>
<span class="na">resume</span><span class="pi">:</span>
  <span class="na">basics</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Richard</span><span class="nv"> </span><span class="s">Hendricks"</span>
    <span class="na">label</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Programmer"</span>
    <span class="na">picture</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/assets/icons/icon.png"</span>
  <span class="c1"># ...</span>
<span class="nn">---</span>
</code></pre></div></div>

<h3 id="downloads">Downloads</h3>
<p>You can add buttons to let readers print or download your resume in various formats. 
Add the following to the front matter to add all 4 buttons:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: "resume.md"</span>
<span class="na">buttons</span><span class="pi">:</span>
  <span class="na">print</span><span class="pi">:</span> <span class="no">true</span>
  <span class="na">pdf</span><span class="pi">:</span> <span class="s">/assets/Resume.pdf</span>
  <span class="na">vcf</span><span class="pi">:</span> <span class="s">http://h2vx.com/vcf/&lt;!--url--&gt;</span>
  <span class="na">json</span><span class="pi">:</span> <span class="s">/assets/resume.json</span>
</code></pre></div></div>

<p>To remove a button remove the corresponding key from the hash.</p>

<p>While the <code class="language-plaintext highlighter-rouge">resume.json</code> is can be generated by Jekyll itself, and the vCard can be generated by an <a href="http://h2vx.com/vcf/">external service</a>,
the PDF needs to be pre-generated by you.</p>

<p>You can render a PDF from the resume page itself by using your browser’s “Print to PDF” feature (Chrome works best). 
For best results, check the following options in the print popup:</p>

<p><img src="/assets/img/docs/chrome-print.png" alt="Uncheck Headers and footers, check Background graphics" width="299" height="588" loading="lazy" /></p>

<p class="read-more">Continue with <a href="writing.md" class="heading flip-title">Writing</a></p>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="project" /><summary type="html"><![CDATA[This chapter covers the basics of content creation with Hydejack.]]></summary></entry><entry><title type="html">Install</title><link href="http://localhost:4000/project/2012-02-07-install/" rel="alternate" type="text/html" title="Install" /><published>2012-02-07T00:00:00+09:00</published><updated>2022-12-10T16:55:57+09:00</updated><id>http://localhost:4000/project/install</id><content type="html" xml:base="http://localhost:4000/project/2012-02-07-install/"><![CDATA[<p>How you install Hydejack depends on whether you <a href="#new-sites">start a new site</a>, 
or change the theme of <a href="#existing-sites">an existing site</a>.</p>

<ol id="markdown-toc">
  <li><a href="#new-sites" id="markdown-toc-new-sites">New sites</a></li>
  <li><a href="#existing-sites" id="markdown-toc-existing-sites">Existing sites</a>    <ol>
      <li><a href="#troubleshooting" id="markdown-toc-troubleshooting">Troubleshooting</a></li>
    </ol>
  </li>
  <li><a href="#github-pages" id="markdown-toc-github-pages">GitHub Pages</a></li>
  <li><a href="#running-locally" id="markdown-toc-running-locally">Running locally</a></li>
</ol>

<h2 id="new-sites">New sites</h2>
<p>For new sites, the best way to get started with Hydejack is via the Starter Kit. 
It comes with a documented config file and example content that gets you started quickly.</p>

<p>If you have a GitHub account, fork the <a href="https://github.com/hydecorp/hydejack-starter-kit">Hydejack Starter Kit</a> repository. 
Otherwise <a href="https://github.com/hydecorp/hydejack-starter-kit/archive/v9.1.6.zip">download the Starter Kit</a> and unzip them somewhere on your machine.</p>

<p>If you bought the <strong>PRO Version</strong> of Hydejack, use the contents of the <code class="language-plaintext highlighter-rouge">starter-kit</code> folder instead.</p>

<p class="note">In addition to the docs here, you can follow the quick start guide in the Starter Kit.</p>

<p>You can now jump to <a href="#running-locally">running locally</a>.</p>

<p class="note">You can now also <a href="https://app.netlify.com/start/deploy?repository=https://github.com/hydecorp/hydejack-starter-kit" class="no-mark-external"><img src="https://www.netlify.com/img/deploy/button.svg" alt="Deploy to Netlify" /></a> directly.</p>

<h2 id="existing-sites">Existing sites</h2>
<p>If you have an existing site that you’d like to upgrade to Hydejack you can install the theme via bundler.
Add the following to your <code class="language-plaintext highlighter-rouge">Gemfile</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `Gemfile`</span>
<span class="n">gem</span> <span class="s2">"jekyll-theme-hydejack"</span>
</code></pre></div></div>

<p>If you bought the <strong>PRO Version</strong> of Hydejack, copy the <code class="language-plaintext highlighter-rouge">#jekyll-theme-hydejack</code> folder into the root folder of your site,
and add the following to your <code class="language-plaintext highlighter-rouge">Gemfile</code> instead:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `Gemfile`</span>
<span class="n">gem</span> <span class="s2">"jekyll-theme-hydejack"</span><span class="p">,</span> <span class="ss">path: </span><span class="s2">"./#jekyll-theme-hydejack"</span>
</code></pre></div></div>

<p class="note">The folder is prefixed with a <code class="language-plaintext highlighter-rouge">#</code> to indicate that this folder is different from regular Jekyll content. 
The <code class="language-plaintext highlighter-rouge">#</code> char was choosen specifically because it is on of the four characters ignored by Jekyll by default (<code class="language-plaintext highlighter-rouge">.</code>, <code class="language-plaintext highlighter-rouge">_</code> , <code class="language-plaintext highlighter-rouge">#</code>, <code class="language-plaintext highlighter-rouge">~</code>).</p>

<p>In your config file, change the <code class="language-plaintext highlighter-rouge">theme</code> to Hydejack:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">theme</span><span class="pi">:</span> <span class="s">jekyll-theme-hydejack</span>
</code></pre></div></div>

<p>Hydejack comes with a default configuration file that takes care most of the configuration,
but it pays off to check out the example config file in the Starter Kit to see what’s available.</p>

<p>You can now jump to <a href="#running-locally">running locally</a>.</p>

<h3 id="troubleshooting">Troubleshooting</h3>
<p>If your existing site combines theme files with your content (as did previous verisons of Hydejack/PRO),
make sure to delete the following folders:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">_layouts</code></li>
  <li><code class="language-plaintext highlighter-rouge">_includes</code></li>
  <li><code class="language-plaintext highlighter-rouge">_sass</code></li>
  <li><code class="language-plaintext highlighter-rouge">assets</code></li>
</ul>

<p>The <code class="language-plaintext highlighter-rouge">assets</code> folder most likely includes theme files as well as your personal/content files. 
Make sure to only delete files that belong to the old theme!</p>

<h2 id="github-pages">GitHub Pages</h2>
<p>If you want to build your site on <a href="https://jekyllrb.com/docs/github-pages/">GitHub Pages</a>, check out the <a href="https://github.com/hydecorp/hydejack-starter-kit/tree/gh-pages"><code class="language-plaintext highlighter-rouge">gh-pages</code> branch</a> in the Hydejack Starter Kit repo.</p>

<p>For existing sites, you can instead set the <code class="language-plaintext highlighter-rouge">remote_theme</code> key as follows:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">remote_theme</span><span class="pi">:</span> <span class="s">hydecorp/hydejack@v9.1.6</span>
</code></pre></div></div>

<p class="note" title="Important">Make sure the <code class="language-plaintext highlighter-rouge">plugins</code> list contains <code class="language-plaintext highlighter-rouge">jekyll-include-cache</code> (create if it doesn’t exist):</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `_config.yml`</span>
<span class="na">plugins</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">jekyll-include-cache</span>
</code></pre></div></div>

<p>To run this configuration locally, make sure the following is part of your <code class="language-plaintext highlighter-rouge">Gemfile</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: `Gemfile`</span>
<span class="n">gem</span> <span class="s2">"github-pages"</span><span class="p">,</span> <span class="ss">group: :jekyll_plugins</span>
<span class="n">gem</span> <span class="s2">"jekyll-include-cache"</span><span class="p">,</span> <span class="ss">group: :jekyll_plugins</span>
</code></pre></div></div>

<p class="note">Note that Hydejack has a reduced feature set when built on GitHub Pages. 
Specifically, using KaTeX math formulas doesn’t work when built in this way.</p>

<h2 id="running-locally">Running locally</h2>
<p>Make sure you’ve <code class="language-plaintext highlighter-rouge">cd</code>ed into the directory where <code class="language-plaintext highlighter-rouge">_config.yml</code> is located.
Before running for the first time, dependencies need to be fetched from <a href="https://rubygems.org/">RubyGems</a>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bundle <span class="nb">install</span>
</code></pre></div></div>

<p class="note">If you are missing the <code class="language-plaintext highlighter-rouge">bundle</code> command, you can install Bundler by running <code class="language-plaintext highlighter-rouge">gem install bundler</code>.</p>

<p>Now you can run Jekyll on your local machine:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>

<p>and point your browser to <a href="http://localhost:4000">http://localhost:4000</a> to see Hydejack in action.</p>

<p class="read-more">Continue with <a href="config.md" class="heading flip-title">Config</a></p>]]></content><author><name>이 주언</name><email>will980313@gmail.com</email></author><category term="project" /><summary type="html"><![CDATA[How you install Hydejack depends on whether you start a new site, or change the theme of an existing site.]]></summary></entry></feed>